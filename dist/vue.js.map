{"version":3,"file":"vue.js","sources":["../src/utils/strategy.js","../src/utils/merge.js","../src/global-static-api.js","../src/utils/index.js","../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/observe/watcher.js","../src/initState.js","../src/compiler/type.js","../src/compiler/parser.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/hooks/life-hook.js","../src/init.js","../src/index.js"],"sourcesContent":["/*\r\n * @Author: 毛毛 \r\n * @Date: 2022-04-15 20:52:34 \r\n * @Last Modified by:   毛毛 \r\n * @Last Modified time: 2022-04-15 20:52:34 \r\n * 导出mixin时用到的一些策略模式\r\n */\r\n// 策略模式\r\nexport const strategy = {};\r\n// 生命周期\r\nconst LIFE_CYCLE = [\r\n  \"beforeCreate\",\r\n  \"created\",\r\n  \"beforeMount\",\r\n  \"mounted\",\r\n  \"beforeUpdate\",\r\n  \"update\",\r\n];\r\nLIFE_CYCLE.forEach((hook) => {\r\n  strategy[hook] = function (s1, s2) {\r\n    if (s2) {\r\n      if (s1) {\r\n        // 合并选项\r\n        // return s1.concat(s2);\r\n        return [...s1, s2];\r\n      } else {\r\n        // 全局options没有 用户传递的有 变成数组\r\n        return [s2];\r\n      }\r\n    } else {\r\n      return s1;\r\n    }\r\n  };\r\n});\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-15 20:43:57\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-15 21:57:13\r\n * 合并对象的方法\r\n */\r\nimport { strategy } from \"./strategy\";\r\n/**\r\n * 合并选项\r\n * @param  {...any} options \r\n * @returns \r\n */\r\nexport function mergeOptions(...options) {\r\n  const opts = {};\r\n  const [source1, source2] = options;\r\n  for (const key in source1) {\r\n    mergeField(key);\r\n  }\r\n  for (const key in source2) {\r\n    if (!source1.hasOwnProperty(key)) {\r\n      mergeField(key);\r\n    }\r\n  }\r\n  function mergeField(key) {\r\n    // 策略模式 减少 if / else\r\n    if (strategy[key]) {\r\n      opts[key] = strategy[key](source1[key], source2[key]);\r\n    }\r\n    // 优先采用用户的选项 再采用全局已存在的\r\n    else opts[key] = source2[key] === void 0 ? source1[key] : source2[key];\r\n  }\r\n  if (options.length > 2) {\r\n    options.splice(0, 2)\r\n    return mergeOptions(opts, ...options);\r\n  }\r\n  return opts;\r\n}\r\n","import { mergeOptions } from \"./utils/merge\";\r\n\r\n/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-15 20:40:36\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-15 20:51:17\r\n * 全局静态 api\r\n */\r\nexport function initGlobalStaticAPI(Vue) {\r\n  Vue.options = {}; // 全局选项\r\n  // 混入\r\n  Vue.mixin = function mixin(mixin) {\r\n    // 我们期望将用户的选项和全局的options进行合并\r\n    // {} + mixin {created(){}} => {created:[fn]}\r\n    this.options = mergeOptions(Vue.options, mixin);\r\n    // console.log(this.options);\r\n    return this;\r\n  };\r\n}\r\n\r\n","/**\r\n * 是否是函数\r\n * @param {*} source 对象\r\n * @returns\r\n */\r\nexport function isFunction(source) {\r\n  return typeof source === \"function\";\r\n}\r\n\r\nexport const isObject = (source) => {\r\n  return source != null && typeof source === \"object\";\r\n};\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-13 10:02:33\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-13 10:26:05\r\n * @Description 重写数组中的变异方法\r\n */\r\nlet oldArrayProto = Array.prototype;\r\n\r\nlet newArrayProto = Object.create(oldArrayProto);\r\n/**\r\n * 七个变异方法 会改变数组本身的方法\r\n * @type {Array<string>}\r\n */\r\nconst methods = [\r\n  \"push\",\r\n  \"pop\",\r\n  \"unshift\",\r\n  \"shift\",\r\n  \"reverse\",\r\n  \"sort\",\r\n  \"splice\",\r\n];\r\nmethods.forEach((method) => {\r\n  // 重写数组的方法 内部调用的还是原来的方法\r\n  // 函数的劫持 切片编程\r\n  newArrayProto[method] = function (...args) {\r\n    // 如果新增的数组元素是对象 需要再次劫持\r\n    let inserted;\r\n    // Observe实例\r\n    const ob = this.__ob__;\r\n    switch (method) {\r\n      case \"push\":\r\n      case \"unshift\": // 插入元素\r\n        // 新增的元素 可能是对象\r\n        inserted = args;\r\n        break;\r\n      case \"splice\": // 数组最强方法 splice(start, delCount, ...新增元素)\r\n        inserted = args.slice(2); // 新增的元素\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    console.log(\"新增的内容------------------>\", inserted);\r\n    if (inserted) {\r\n      // 观测新增的内容\r\n      ob.observeArray(inserted);\r\n    }\r\n    console.log(`重写的${method}方法被调用------> this = `, this);\r\n    const res = oldArrayProto[method].call(this, ...args);\r\n    return res;\r\n  };\r\n});\r\nexport default newArrayProto;\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-15 09:31:54\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-16 09:50:12\r\n * 依赖收集 dep\r\n */\r\nlet id = 0;\r\nclass Dep {\r\n  id = id++;\r\n  constructor() {\r\n    // 属性的dep要收集watcher\r\n    this.subs = [];\r\n  }\r\n  /**\r\n   * 收集当前属性 对应的视图 watcher\r\n   */\r\n  depend() {\r\n    // 这里我们不希望收集重复的watcher，而且现在还只是单向的关系 dep -> watcher\r\n    // watcher 也需要记录 dep\r\n    // this.subs.push(Dep.target);\r\n    // console.log(this.subs);\r\n    // 这里是让watcher先记住dep\r\n    Dep.target.addDep(this); //  this -> dep\r\n  }\r\n  /**\r\n   * dep 在反过来记录watcher\r\n   * @param {*} watcher\r\n   */\r\n  addSub(watcher) {\r\n    this.subs.push(watcher);\r\n    // console.log(watcher);\r\n  }\r\n  /**\r\n   * 更新视图\r\n   */\r\n  notify() {\r\n    this.subs.forEach((watcher) => watcher.update());\r\n  }\r\n  // 当前的watcher\r\n  static target = null;\r\n}\r\n\r\n// watcher queue 视图渲染栈\r\nconst watcherStack = [];\r\n/**\r\n * watcher入栈\r\n * @param {Watcher} watcher\r\n */\r\nexport function pushWatcherTarget(watcher) {\r\n  watcherStack.push(watcher);\r\n  Dep.target = watcher;\r\n}\r\n/**\r\n * watcher 出栈 且让 Dep.target 指向上一个入栈的 watcher\r\n */\r\nexport function popWatcherTarget() {\r\n  watcherStack.pop();\r\n  Dep.target = watcherStack[watcherStack.length - 1];\r\n}\r\nexport default Dep;\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-13 08:51:06\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-16 13:24:01\r\n */\r\nimport { isObject } from \"../utils\";\r\nimport arrayProto from \"./array\";\r\nimport Dep from \"./dep\";\r\nclass Observe {\r\n  constructor(data) {\r\n    // 记录this 也是一个标识 如果对象上有了该属性 标识已经被观测\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      value: this, // observe的实例\r\n    });\r\n    // 如果劫持的数据是数组\r\n    if (Array.isArray(data)) {\r\n      // 重写数组上的7个方法 这7个变异方法是可以修改数组本身的\r\n      Object.setPrototypeOf(data, arrayProto);\r\n      // 对于数组元素是 引用类型的，需要深度观测的\r\n      this.observeArray(data);\r\n    } else {\r\n      // Object.defineProperty 只能劫持已经存在的属性（vue提供单独的api $set $delete 为了增加新的响应式属性）\r\n      this.walk(data);\r\n    }\r\n  }\r\n  /**\r\n   * 循环对象 对属性依次劫持 重新‘定义’属性\r\n   * @param {*} data\r\n   */\r\n  walk(data) {\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\r\n  }\r\n  /**\r\n   * 劫持数组元素 是普通原始值不会劫持\r\n   * @param {Array} data\r\n   */\r\n  observeArray(data) {\r\n    data.forEach((item) => observe(item));\r\n  }\r\n}\r\n/**\r\n * 定义目标对象上的属性为响应式\r\n * @param {Object} obj\r\n * @param {string|symbol} key\r\n * @param {*} value\r\n */\r\nexport function defineReactive(obj, key, value) {\r\n  // 如果属性也是对象 再次劫持\r\n  observe(value);\r\n  // 每个属性都有一个dep\r\n  let dep = new Dep();\r\n  Object.defineProperty(obj, key, {\r\n    get() {\r\n      // 判断 Dep.target\r\n      if (Dep.target) {\r\n        // 当前属性 记住这个watcher 也就是视图依赖的收集\r\n        dep.depend();\r\n      }\r\n      // console.log(\"----------------dep.get----------------\",key)\r\n      return value;\r\n    },\r\n    set(newVal) {\r\n      if (newVal === value) return;\r\n      // 新值是对象 则需要重新观测\r\n      observe(newVal);\r\n      value = newVal;\r\n      // 更新数据 通知视图更新\r\n      dep.notify();\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * 数据劫持方法\r\n * @param {*} data 需要劫持的数据\r\n */\r\nexport function observe(data) {\r\n  // 不是对象 不需要劫持\r\n  if (!isObject(data)) return;\r\n  // 如果一个对象被劫持过了，那么不需要再次被劫持了\r\n  if (data.__ob__ instanceof Observe) return data.__ob__;\r\n  // console.log(\"observe---------------->\", data);\r\n  return new Observe(data);\r\n}\r\n","import Dep, { popWatcherTarget, pushWatcherTarget } from \"./dep\";\r\n\r\n/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-15 09:09:45\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-16 12:55:37\r\n * 封装视图的渲染逻辑 watcher\r\n */\r\nlet id = 0;\r\n/**\r\n * watcher 进行实际的视图渲染\r\n * 每个组件都有自己的watcher，可以减少每次更新页面的部分\r\n * 给每个属性都增加一个dep，目的就是收集watcher\r\n * 一个视图（组件）可能有很多属性，多个属性对应一个视图 n个dep对应1个watcher\r\n * 一个属性也可能对应多个视图（组件）\r\n * 所以 dep 和 watcher 是多对多关系\r\n *\r\n * 每个属性都有自己的dep，属性就是被观察者\r\n * watcher就是观察者（属性变化了会通知观察者进行视图更新）-> 观察者模式\r\n */\r\nclass Watcher {\r\n  // 目前只有一个watcher实例 因为我只有一个实例 根组件\r\n  id = id++;\r\n  /**\r\n   *\r\n   * @param {*} vm 组件实例\r\n   * @param {*} updateComponent 渲染页面的回调函数\r\n   * @param {boolean|object} options 额外选项 true表示初次渲染 对象是额外的配置\r\n   */\r\n  constructor(vm, updateComponent, options) {\r\n    if (typeof options === \"boolean\") this.renderWatcher = true;\r\n    // 记录vm实例\r\n    this.vm = vm;\r\n    this.options = options;\r\n    // 调用这个函数 意味着可以发生取值操作\r\n    this.getter = updateComponent;\r\n    // 收集 dep   watcher -> deps\r\n    this.deps = []; // 在组件卸载的时候，清理响应式数据使用 还有实现响应式数据等都需要使用到\r\n    this.depsId = new Set(); // dep id\r\n    // 是否懒执行\r\n    this.lazy = options?.lazy;\r\n    // dirty  计算属性使用的\r\n    this.dirty = this.lazy;\r\n    console.log(this.lazy);\r\n    // 初渲染\r\n    this.lazy || this.get();\r\n  }\r\n  get() {\r\n    /**\r\n     * 1.当我们创建渲染watcher的时候 会把当前的渲染watcher放到Dep.target上\r\n     * 2.调用_render()取值 走到值的get上\r\n     */\r\n    // Dep.target = this;\r\n    pushWatcherTarget(this);\r\n    // 去 vm上取值 这里的this不是vm了，所以取值需要绑定vm\r\n    const val = this.getter.call(this.vm);\r\n    // 渲染完毕后清空\r\n    // Dep.target = null;\r\n    popWatcherTarget();\r\n    return val; // 计算属性执行的返回值\r\n  }\r\n  evaluate() {\r\n    // 获取到用户函数的返回值(getter返回值) 并且标识数据不是脏的\r\n    this.value = this.get();\r\n    this.dirty = false;\r\n  }\r\n  /**\r\n   * 一个组件对应多个属性 但是重复的属性 也不需要记录\r\n   * 比如在组件视图中 用到了多次的name属性，那么需要记录每次用到name的watcher吗\r\n   * @param {*} dep\r\n   */\r\n  addDep(dep) {\r\n    // dep去重 可以用到 dep.id\r\n    const id = dep.id;\r\n    if (!this.depsId.has(id)) {\r\n      // watcher记录dep\r\n      this.deps.push(dep);\r\n      this.depsId.add(id);\r\n      // dep记录watcher\r\n      dep.addSub(this);\r\n    }\r\n  }\r\n  /**\r\n   * 更新视图 本质重新执行 render函数\r\n   */\r\n  update() {\r\n    // 是计算属性\r\n    if (this.lazy) {\r\n      // 依赖的值变化 就标识计算属性的值是脏值了\r\n      return this.dirty = true;\r\n    }\r\n    // 同步更新视图 改为异步更新视图\r\n    // this.get();\r\n    // 把当前的watcher暂存\r\n    queueWatcher(this);\r\n    console.log(\"update watcher.................\");\r\n  }\r\n  /**\r\n   * 实际刷新视图的操作 执行render用到的都是实例最新的属性值\r\n   */\r\n  run() {\r\n    console.log(\"run------------------\");\r\n    this.get();\r\n  }\r\n  depend(){\r\n    // 之前是属性dep记录watcher\r\n    // 这里是watcher记录属性dep\r\n    let i = this.deps.length;\r\n    while(i--){\r\n      // 让计算属性watcher收集上层watcher\r\n      // curr dep -> prev watcher -> curr dep -> prev watcher\r\n      // dep.depend() -> watcher.addDep(dep) -> dep.addSub(watcher)\r\n      this.deps[i].depend()\r\n    }\r\n  }\r\n}\r\n// watcher queue 本次需要更新的视图队列\r\nlet queue = [];\r\n// watcher 去重  {0:true,1:true}\r\nlet has = {};\r\n// 批处理 也可以说是防抖\r\nlet pending = false;\r\n/**\r\n * 不管执行多少次update操作，但是我们最终只执行一轮刷新操作\r\n * @param {*} watcher\r\n */\r\nfunction queueWatcher(watcher) {\r\n  const id = watcher.id;\r\n  // 去重\r\n  if (!has[id]) {\r\n    queue.push(watcher);\r\n    has[id] = true;\r\n    console.log(queue);\r\n    if (!pending) {\r\n      // 刷新队列 多个属性刷新 其实执行的只是第一次 合并刷新了\r\n      // setTimeout(flushSchedulerQueue, 0);\r\n      // 将刷新队列的执行和用户回调的执行都放到一个微任务中\r\n      nextTick(flushSchedulerQueue);\r\n      pending = true;\r\n    }\r\n  }\r\n}\r\n/**\r\n * 刷新调度队列 且清理当前的标识 has pending 等都重置\r\n * 先执行第一批的watcher，如果刷新过程中有新的watcher产生，再次加入队列即可\r\n */\r\nfunction flushSchedulerQueue() {\r\n  const flushQueue = [...queue];\r\n  queue = [];\r\n  has = {};\r\n  pending = false;\r\n  // 刷新视图 如果在刷新过程中 还有新的watcher 会重新放到queueWatcher中\r\n  flushQueue.forEach((watcher) => watcher.run());\r\n}\r\n// 任务队列\r\nlet callbacks = [];\r\n// 是否等待任务刷新\r\nlet waiting = false;\r\n/**\r\n * 刷新异步回调函数队列\r\n */\r\nfunction flushCallbacks() {\r\n  const cbs = [...callbacks];\r\n  callbacks = [];\r\n  waiting = false;\r\n  cbs.forEach((cb) => cb());\r\n}\r\n/**\r\n * 优雅降级  Promise -> MutationObserve -> setImmediate -> setTimeout(需要开线程 开销最大)\r\n */\r\nlet timerFunc = null;\r\nif (Promise) {\r\n  timerFunc = () => Promise.resolve().then(flushCallbacks);\r\n} else if (MutationObserver) {\r\n  // 创建并返回一个新的 MutationObserver 它会在指定的DOM发生变化时被调用（异步执行callback）。\r\n  const observer = new MutationObserver(flushCallbacks);\r\n  // TODO 创建文本节点的API 应该封装 为了方便跨平台\r\n  const textNode = document.createTextNode(1);\r\n  console.log(\"observer-----------------\");\r\n  // 监控文本值的变化\r\n  observer.observe(textNode, {\r\n    characterData: true,\r\n  });\r\n  timerFunc = () => (textNode.textContent = 2);\r\n} else if (setImmediate) {\r\n  // IE平台\r\n  timerFunc = () => setImmediate(flushCallbacks);\r\n} else {\r\n  timerFunc = () => setTimeout(flushCallbacks, 0);\r\n}\r\n/**\r\n * 异步批处理\r\n * 是先执行内部的回调 还是用户的？ 用个队列 排序\r\n * @param {Function} cb 回调函数\r\n */\r\nexport function nextTick(cb) {\r\n  // 使用队列维护nextTick中的callback方法\r\n  callbacks.push(cb);\r\n  if (!waiting) {\r\n    // setTimeout(flushCallbacks, 0); // 刷新\r\n    // 使用vue的原理 优雅降级\r\n    timerFunc();\r\n    waiting = true;\r\n  }\r\n}\r\n\r\nexport default Watcher;\r\n","import { isFunction } from \"./utils\";\r\nimport { observe } from \"./observe\";\r\nimport Watcher from \"./observe/watcher\";\r\nimport Dep from \"./observe/dep\";\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    enumerable: true,\r\n    get() {\r\n      return vm[target][key];\r\n    },\r\n    set(newVal) {\r\n      vm[target][key] = newVal;\r\n    },\r\n  });\r\n}\r\n/**\r\n * 初始化实例\r\n * @param {*} vm vue实例\r\n */\r\nfunction initState(vm) {\r\n  const opts = vm.$options; // 获取所有选项\r\n  if (opts.data) {\r\n    // data 初始化\r\n    initData(vm);\r\n  }\r\n  // computed\r\n  if (opts.computed) {\r\n    initComputed(vm);\r\n  }\r\n}\r\n/**\r\n * 初始化 data\r\n * @param {Vue} vm 实例\r\n */\r\nfunction initData(vm) {\r\n  // data可能是函数 也可能是对象\r\n  let data = vm.$options.data;\r\n  // data是函数 执行一下\r\n  if (isFunction(data)) data = data.call(vm);\r\n  Object.defineProperty(vm, \"_data\", {\r\n    configurable: true,\r\n    // enumerable: false,\r\n    writable: true,\r\n    value: data,\r\n  });\r\n  console.log(\"initData------------>\", data);\r\n  // 数据劫持\r\n  observe(data);\r\n  // 把 vm._data 用vm来代理 访问 vm.name -> vm._data.name\r\n  for (const key in data) {\r\n    proxy(vm, \"_data\", key);\r\n  }\r\n}\r\n/**\r\n * 初始化 computed\r\n * @param {Vue} vm 实例\r\n */\r\nfunction initComputed(vm) {\r\n  const computed = vm.$options.computed;\r\n  const watchers = (vm._computedWatchers = {});\r\n  for (const key in computed) {\r\n    const userDef = computed[key];\r\n    // function -> get\r\n    // object -> {get(){}, set(newVal){}}\r\n    let setter;\r\n    const getter = isFunction(userDef)\r\n      ? userDef\r\n      : ((setter = userDef.set), getter);\r\n    // 监控计算属性中 get的变化\r\n    // 每次data的属性发生改变 重新执行的就是这个get\r\n    // 传入额外的配置项 标明当前的函数 不需要立刻执行 只有在使用到计算属性了 才计算值\r\n    // 把属性和watcher对应起来\r\n    watchers[key] = new Watcher(vm, getter, { lazy: true });\r\n    // 劫持每一个计算属性\r\n    defineComputed(vm, key, setter);\r\n  }\r\n}\r\n/**\r\n * 定义计算属性\r\n * @param {*} target\r\n * @param {*} key\r\n * @param {*} setter\r\n */\r\nfunction defineComputed(target, key, setter) {\r\n  Object.defineProperty(target, key, {\r\n    // vm.key -> vm.get key this -> vm\r\n    get: createComputedGetter(key),\r\n    set: setter,\r\n  });\r\n}\r\n/**\r\n * vue2.x 的计算属性 不会收集依赖，只是让计算属性依赖的属性去收集依赖\r\n * 创建一个懒执行（有缓存的）计算属性 判断值是否发生改变\r\n * 检查是否需要执行这个getter\r\n * @param {string} key\r\n */\r\nfunction createComputedGetter(key) {\r\n  // this -> vm 因为返回值给了计算属性的 get 我们是从 vm上取计算属性的\r\n  return function lazyGetter() {\r\n    // 对应属性的watcher\r\n    const watcher = this._computedWatchers[key];\r\n    if (watcher.dirty) {\r\n      // 如果是脏的 就去执行用户传入的getter函数 watcher.get()\r\n      // 但是为了可以拿到get的执行结果 我们调用 evaluate函数\r\n      watcher.evaluate(); // dirty = false\r\n    }\r\n    // 计算属性watcher出栈后 还有渲染watcher（在视图中使用了计算属性）\r\n    // 或者说是在其他的watcher中使用了计算属性\r\n    if (Dep.target) {\r\n      // 让计算属性的watcher依赖的变量也去收集上层的watcher\r\n      watcher.depend();\r\n    }\r\n    return watcher.value;\r\n  };\r\n}\r\nexport { initState };\r\n","/*\r\n * @Author: 毛毛 \r\n * @Date: 2022-04-14 13:09:23 \r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-14 13:10:07\r\n * 节点类型\r\n */\r\n// 元素类型\r\nconst ELEMENT_TYPE = 1;\r\n// 文本类型\r\nconst TEXT_TYPE = 3;\r\n\r\nexport{\r\n  ELEMENT_TYPE,\r\n  TEXT_TYPE\r\n}","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-13 12:25:22\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-14 14:28:15\r\n * @Description 模板编译\r\n * 解析模板 可以使用现成的包 html-parser2\r\n */\r\nimport { ELEMENT_TYPE, TEXT_TYPE } from \"./type\";\r\n/**\r\n * 匹配标签名\r\n * 开头不能包含特殊字符和数字\r\n * 第二个字符开始 可以是任意字符了 / \\ 空白符 . 都可以\r\n *  div _div _ab88 a_9.//a\r\n *\r\n */\r\nconst ncname = \"[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*\";\r\n/**\r\n * 捕获 标签名\r\n * 注意 ?: 只匹配不捕获\r\n * 这里的匹配标签名 后面还有:的这种 是带命名空间的标签 比如 a:b\r\n */\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// ((?:[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*\\\\:)?[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*)\r\n/**\r\n * 匹配到的分组是一个 标签名 <div\r\n */\r\n// ^<((?:[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*\\\\:)?[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*)\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n/**\r\n * 匹配标签名结束 <\\/div> 因为 /具有特殊含义\r\n */\r\n// ^<\\\\/((?:[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*\\\\:)?[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*)[^>]*>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// `^<\\\\/${qnameCapture}[^>]*>`\r\n/**\r\n * 匹配属性  a=\"abc\" a='abc' a=abc a\r\n * 分组一的值就是键key 分组3/4/5匹配到的是value\r\n */\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n/**\r\n * 匹配标签结束\r\n * 标签可能自闭合 <div></div> <br/>  />\r\n */\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n/**\r\n * 匹配 双花括号语法 {{}} 匹配到的是就是双花括号的 变量\r\n */\r\nexport const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n/**\r\n * 解析 模板\r\n * @param {string} html 模板字符串\r\n * vue2采用正则编译解析 vue3不是采用正则了\r\n */\r\nfunction parseHTML(html) {\r\n  /**\r\n   * 最终需要转换为一颗抽象语法树 ast abstract syntax tree\r\n   * 可以借助栈思想\r\n   * 栈中的最后一个标签元素 就是当前正在匹配的元素的父元素\r\n   * @type {Array<{tag:string,type:number,children:Array}>}\r\n   */\r\n  const stack = [];\r\n  // 栈帧 指向最后一个元素\r\n  let curParent = null;\r\n  let root = null; // 根元素\r\n\r\n  /**\r\n   * 创建 ast\r\n   * @param {string} tag 标签名\r\n   * @param {Array<{name:string,value:any}>} attrs 属性\r\n   * @returns\r\n   */\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    };\r\n  }\r\n  /**\r\n   * 处理开始标签 并且开始构造抽象语法树\r\n   * @param {string} tag\r\n   * @param {Array<{name:string,value:any}>} attrs\r\n   * @param {boolean} isSelfClose 是否自闭合\r\n   */\r\n  function start(tag, attrs, isSelfClose) {\r\n    // console.log(tag, attrs);\r\n    // 当前节点\r\n    const node = createASTElement(tag, attrs);\r\n    // 根节点\r\n    root = root ?? node;\r\n    // 更新当前节点的父节点 更新父元素的子元素节点\r\n    curParent && ((node.parent = curParent), curParent.children.push(node));\r\n    // TODO 是自闭合标签 不需要入栈的\r\n    if (isSelfClose) return;\r\n    // 新节点入栈\r\n    stack.push(node);\r\n    // 更新当前指向的最前面的父节点\r\n    curParent = node;\r\n    // console.log(node, root);\r\n  }\r\n  /**\r\n   * 处理文本内容\r\n   * @param {string} text\r\n   */\r\n  function chars(text) {\r\n    // 去除空字符串\r\n    text = text.replace(/^\\s+|\\s+$/gm, \"\");\r\n    // console.log(text);\r\n    // 文本节点 插入到父元素的孩子中\r\n    text &&\r\n      curParent.children.push({\r\n        type: TEXT_TYPE,\r\n        text,\r\n        parent: curParent,\r\n      });\r\n  }\r\n  /**\r\n   * 处理结束标签\r\n   * @param {string} tag 标签名称\r\n   */\r\n  function end(tag) {\r\n    // console.log(tag);\r\n    // 弹出最后一个栈元素 并更新指向的父节点\r\n    const node = stack.pop();\r\n    // TODO 可以根据tag和node.tag 校验标签是否合法等 也需要考虑自闭合标签\r\n    if (tag !== node.tag) {\r\n      // console.log(\"标签不合法---------\",tag, node);\r\n    }\r\n    curParent = stack[stack.length - 1];\r\n  }\r\n  /**\r\n   * 解析模板的开始标签\r\n   * @param {string} html 模板字符串\r\n   */\r\n  function parseStartTag() {\r\n    // 匹配标签起始位置\r\n    const start = html.match(startTagOpen);\r\n    if (start) {\r\n      // 是开始标签\r\n      const match = {\r\n        // 标签名\r\n        tagName: start[1],\r\n        // 属性\r\n        attrs: [],\r\n        // 是否是自闭合标签\r\n        isSelfClose: false,\r\n      };\r\n      advance(start[0].length);\r\n      // 不是标签结束位置 一直匹配\r\n      let attr, end;\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        // 去除属性\r\n        advance(attr[0].length);\r\n        match.attrs.push({\r\n          // 属性名\r\n          name: attr[1],\r\n          // 属性值 key=\"value\" key='value' key=value\r\n          // key  对于只有key的这种，我们给默认值true\r\n          value: attr[3] || attr[4] || attr[5] || true,\r\n        });\r\n      }\r\n      // 去除标签的右闭合箭头  <div> 中的 > 或者自闭合标签 <br/> />\r\n      if (end) {\r\n        advance(end[0].length);\r\n        // 自闭合\r\n        if (end[0].endsWith(\"/>\")) match.isSelfClose = true;\r\n      }\r\n      // console.log(match);\r\n      return match;\r\n    }\r\n    // 不是开始标签\r\n    return false;\r\n  }\r\n  /**\r\n   * 字符串截取\r\n   * @param {number} start 截取的起始位置\r\n   */\r\n  function advance(start) {\r\n    html = html.substring(start);\r\n  }\r\n  // vue2中 html 开头肯定是 <  <div>hello</div>\r\n  while (html) {\r\n    // 如果indexOf中索引的值是 0 则说明是个开始标签 或者 结束标签\r\n    // > 0 是文本的结束位置  </div>\r\n    let textEnd = html.indexOf(\"<\");\r\n    if (textEnd === 0) {\r\n      // 解析开始标签 开始标签及其标签内的属性等\r\n      const startTagMatch = parseStartTag(); // 匹配结果\r\n      if (startTagMatch) {\r\n        // console.log(startTagMatch);\r\n        start(\r\n          startTagMatch.tagName,\r\n          startTagMatch.attrs,\r\n          startTagMatch.isSelfClose\r\n        );\r\n        continue;\r\n      }\r\n      // 去除结束标签 来到这里 肯定是 </xxx>\r\n      const endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        // console.log(endTagMatch, html);\r\n        end(endTagMatch[1]);\r\n        continue;\r\n      }\r\n    }\r\n    // 文本内容  adb<h2></h2>\r\n    if (textEnd > 0) {\r\n      // 获取文本内容\r\n      const text = html.substring(0, textEnd);\r\n      if (text) {\r\n        advance(text.length); // 解析到的文本\r\n        chars(text);\r\n      }\r\n      // console.log(html);\r\n    }\r\n  }\r\n  // console.log(root);\r\n  // 返回 生成的vNode树 ast\r\n  return root;\r\n}\r\n\r\nexport { parseHTML };\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-14 12:35:12\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-16 09:12:58\r\n * @Description 模板编译\r\n * 模板引擎实现原理： with + new Function\r\n */\r\n\r\nimport { parseHTML, defaultTagRE } from \"./parser\";\r\nimport { TEXT_TYPE, ELEMENT_TYPE } from \"./type\";\r\n/**\r\n * 生成 render函数\r\n * @param {*} template 模板\r\n * @returns {Function}\r\n */\r\nexport function compileToFunction(template) {\r\n  // console.log(\"compileToFunction-------------->\" + template + \"---------\");\r\n  // 1. template 转 ast\r\n  const ast = parseHTML(template);\r\n  // console.log(ast);\r\n  // 2. 生成render方法（该方法的执行结果是返回虚拟dom）\r\n  // TODO 三个方法 _v文本节点 _s把变量转为字符串 _c元素节点\r\n  // 2.1 生成render函数的返回代码块字符串形式\r\n  const renderCodeBlock = codeGenerator(ast);\r\n  // 2.2 生成render函数 new Function\r\n  // 生成的代码中，取变量的值的时候，并没有去当前组件实例的上下文中取值\r\n  // 而是直接 name age 所以这里绑定上下文（组件实例） name -> vm.name -> vm._data.name\r\n  // this -> render.call(thisArg)\r\n  const render = new Function(`with(this){\\n return ${renderCodeBlock}}`);\r\n  // console.log(render);\r\n  return render;\r\n}\r\n\r\n/**\r\n * 根据ast生成代码\r\n * @param {{tag:string,children:Array,type:number,text:string,attrs:Array}} ast\r\n */\r\nfunction codeGenerator(ast) {\r\n  const children = generateChildren(ast.children);\r\n  let code = `_c('${ast.tag}',${\r\n    ast.attrs.length > 0 ? generateProps(ast.attrs) : \"null\"\r\n  }${ast.children?.length ? `,${children}` : \"\"})`;\r\n  return code;\r\n}\r\n/**\r\n * 生成属性对象 {name:\"\",id:\"app\"}\r\n * @param {Array<{name:string|symbol,value:any}>} attrs\r\n */\r\nfunction generateProps(attrs) {\r\n  let str = \"\";\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    const attr = attrs[i];\r\n    if (attr.name === \"style\") {\r\n      // style:\"color:red;background-color:{{backgroundColor}}\"\r\n      // style:{color:\"red\",\"background-color\":\"{{backgroundColor}}\"}\r\n      // let style = \"\";\r\n      const style = {};\r\n      attr.value.split(\";\").forEach((item) => {\r\n        if (!item.trim()) return;\r\n        let [key, value] = item.split(\":\");\r\n        // let match = null;\r\n        // defaultTagRE.lastIndex = 0;\r\n        // match = defaultTagRE.exec(value);\r\n        // if (match) {\r\n        //   value = `_s(${match[1]})`;\r\n        // } else value = `'${value}'`;\r\n        style[key] = value;\r\n        // style += `'${key}':${value},`;\r\n        // console.log(style);\r\n      });\r\n      // str += `${attr.name}:{${style.slice(0, -1)}},`;\r\n      str += `${attr.name}:${JSON.stringify(style)},`;\r\n    } else str += `\"${attr.name}\":${JSON.stringify(attr.value)},`;\r\n  }\r\n  return `{${str.slice(0, -1)}}`;\r\n}\r\n/**\r\n * 生成节点的子节点数组对象\r\n * @param {*} children\r\n */\r\nfunction generateChildren(children) {\r\n  if (children) {\r\n    return children.map((child) => generateChild(child)).join(\",\");\r\n  }\r\n}\r\n/**\r\n * 根据节点生成子字符串形式\r\n * @param {*} node\r\n * @returns\r\n */\r\nfunction generateChild(node) {\r\n  switch (node.type) {\r\n    case ELEMENT_TYPE:\r\n      // 元素节点\r\n      // console.log(codeGenerator(node))\r\n      return codeGenerator(node);\r\n    case TEXT_TYPE:\r\n      // console.log(node.text)\r\n      // 文本节点\r\n      const text = node.text;\r\n      if (!defaultTagRE.test(text)) {\r\n        // 纯文本节点 没有 {{xx}}\r\n        return `_v(${JSON.stringify(text)})`;\r\n      }\r\n      // console.log(text);\r\n      const tokens = [];\r\n      // 匹配结果\r\n      let match = null;\r\n      defaultTagRE.lastIndex = 0;\r\n      // 最后一次匹配结果的起始索引位置\r\n      let lastIndex = 0;\r\n      while ((match = defaultTagRE.exec(text))) {\r\n        // console.log(match)\r\n        // 当前匹配的到的起始位置\r\n        let index = match.index;\r\n        if (index > lastIndex)\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n        tokens.push(`_s(${match[1].trim()})`);\r\n        lastIndex = index + match[0].length;\r\n      }\r\n      // {{age}}--- 最后一次匹配后还有内容\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n      }\r\n      // console.log(tokens);\r\n      return `_v(${tokens.join(\"+\")})`;\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-14 14:35:48\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-15 08:45:32\r\n * 虚拟dom 需要的方法\r\n */\r\n/**\r\n * 生成虚拟dom \r\n * 虚拟dom是和ast不一样的 -> ast是语法层面的转换，他描述的是语法本身（可以描述 js css html等等）\r\n * 我们的虚拟dom  是描述dom元素，可以增加自定义属性\r\n * @param {*} vm \r\n * @param {*} tag \r\n * @param {*} key \r\n * @param {*} props \r\n * @param {*} children \r\n * @param {*} text \r\n * @returns \r\n */\r\nfunction vnode(vm, tag, key, props, children, text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    props,\r\n    children,\r\n    text,\r\n  };\r\n}\r\n// h函数 创建元素节点\r\nfunction createElementVNode(vm, tag, data = {}, ...children) {\r\n  const key = data?.key; // data可能是 null\r\n  key && delete data.key;\r\n  return vnode(vm, tag, key, data, children);\r\n}\r\n// _v 函数 创建文本节点\r\nfunction createTextVNode(vm, text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\nexport {\r\n  createElementVNode,\r\n  createTextVNode as h,\r\n  createTextVNode,\r\n  createTextVNode as _c,\r\n};\r\n","import { createElementVNode, createTextVNode } from \"./vdom\";\r\nimport Watcher from \"./observe/watcher\";\r\n/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-14 14:10:39\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-15 10:15:07\r\n * 组件挂载 生命周期\r\n * vm._render() 生成虚拟节点 vNode\r\n * vm._update() 虚拟节点变成真实节点 dom\r\n */\r\nexport function mountComponent(vm, container) {\r\n  // 记录需要挂载的容器 $el\r\n  Object.defineProperty(vm, \"$el\", {\r\n    value: container,\r\n    writable: true,\r\n  });\r\n  // 这里把渲染逻辑封装到watcher中\r\n  const updateComponent = () => {\r\n    // 1.调用render 产生虚拟节点 vNode\r\n    const vNodes = vm._render();\r\n    // 2. 根据虚拟dom 产生真实dom\r\n    vm._update(vNodes);\r\n  };\r\n  new Watcher(vm, updateComponent, true);\r\n  // // 1.调用render 产生虚拟节点 vNode\r\n  // const vNodes = vm._render();\r\n  // // 2. 根据虚拟dom 产生真实dom\r\n  // vm._update(vNodes);\r\n  // 3. 挂载到container上\r\n}\r\n/**\r\n * 扩展原型方法\r\n * @param {*} Vue\r\n */\r\nexport function initLifeCycle(Vue) {\r\n  Object.defineProperties(Vue.prototype, {\r\n    _render: {\r\n      // 当渲染的时候，会去实例中取值，我们就可以将属性和视图绑定在一起\r\n      value: function _render() {\r\n        const vm = this;\r\n        // 绑定 this为组件实例\r\n        return vm.$options.render.call(vm);\r\n      },\r\n    },\r\n    _update: {\r\n      /**\r\n       * 将虚拟dom转为真实dom  vnode -> dom\r\n       * @param {*} vnode 虚拟dom节点\r\n       */\r\n      value: function _update(vnode) {\r\n        const vm = this;\r\n        // 挂载的容器\r\n        const el = vm.$el;\r\n        // console.log(el);\r\n        // patch 更新 + 初始化\r\n        vm.$el = patch(el, vnode);\r\n        // console.log(\"_update----------------->\", vnode);\r\n      },\r\n    },\r\n    // _c(\"div\",{name:'zs'},...children) 元素 虚拟dom\r\n    _c: {\r\n      value: function _c() {\r\n        // this -> vm\r\n        return createElementVNode(this, ...arguments);\r\n      },\r\n    },\r\n    // _v(text) 文本虚拟dom\r\n    _v: {\r\n      value: function _v() {\r\n        return createTextVNode(this, ...arguments);\r\n      },\r\n    },\r\n    // 就是变量字符串化\r\n    _s: {\r\n      value: function _s(value) {\r\n        // 对于不是对象的字符串，没必要再次转字符串了，不然会多出引号 zs -> \\\"zs\\\"\r\n        return typeof value === \"object\" ? JSON.stringify(value) : value;\r\n      },\r\n    },\r\n  });\r\n}\r\n/**\r\n * vue的核心流程：\r\n * 1. 创造响应式数据\r\n * 2. 模板编译 生成 ast\r\n * 3. ast 转为render函数 后续每次数据更新 只执行render函数(不需要再次进行ast的转换)\r\n * 4. render函数执行 生成 vNode节点（会使用到响应式数据）\r\n * 5. 根据vNode 生成 真实dom 渲染页面\r\n * 6. 数据更新 重新执行render\r\n */\r\n/**\r\n * 更新 | 初渲染时 第一个节点的值是真实元素\r\n * @param {*} oldVNode 旧vnode\r\n * @param {*} vnode 最新的vnode\r\n */\r\nfunction patch(oldVNode, vnode) {\r\n  const isRealElement = oldVNode.nodeType;\r\n  // 真实元素\r\n  if (isRealElement) {\r\n    const elm = oldVNode;\r\n    // 获取父节点 1. 元素节点 2. 文档节点 3. 文档碎片节点\r\n    const parentElm = elm.parentNode;\r\n    // console.log(parentElm)\r\n    const newEle = createEle(vnode);\r\n    // 插入新dom 移除父节点上的老dom节点\r\n    insertBefore(parentElm, newEle, elm.nextSibling);\r\n    removeChild(parentElm, elm);\r\n    // console.log(newEle)\r\n    return newEle;\r\n  }\r\n}\r\n\r\nfunction createEle(vnode) {\r\n  const { tag, props, children, text } = vnode;\r\n  if (typeof tag === \"string\") {\r\n    // 标签 div h2\r\n    // 将虚拟节点和真实节点想管理 根据虚拟节点可以找到真实节点 方便修改属性\r\n    vnode.el = createElement(tag);\r\n    // 更新属性\r\n    patchProps(vnode.el, props);\r\n    children.forEach((child) => {\r\n      appendChild(vnode.el, createEle(child));\r\n    });\r\n  } else if (typeof tag === \"object\") {\r\n    // 组件\r\n  } else {\r\n    // 创建文本节点\r\n    vnode.el = createTextNode(text);\r\n  }\r\n  return vnode.el;\r\n}\r\n/**\r\n * 更新属性到dom节点上\r\n * @param {*} el\r\n * @param {*} props\r\n */\r\nfunction patchProps(el, props) {\r\n  for (const key in props) {\r\n    if (key === \"style\") {\r\n      Object.keys(props[key]).forEach((k) => (el.style[k] = props[\"style\"][k]));\r\n    } else {\r\n      setAttribute(el, key, props[key]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction createElement(tag, type = \"browser\") {\r\n  switch (type.toLowerCase()) {\r\n    case \"browser\":\r\n      return document.createElement(tag);\r\n  }\r\n}\r\n\r\nfunction createTextNode(tag, type = \"browser\") {\r\n  switch (type.toLowerCase()) {\r\n    case \"browser\":\r\n      return document.createTextNode(tag);\r\n  }\r\n}\r\n\r\nfunction appendChild(parent, child, type = \"browser\") {\r\n  switch (type.toLowerCase()) {\r\n    case \"browser\":\r\n      parent.appendChild(child);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction setAttribute(el, key, value, type = \"browser\") {\r\n  switch (type.toLowerCase()) {\r\n    case \"browser\":\r\n      el.setAttribute(key, value);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction removeChild(parent, child, type = \"browser\") {\r\n  switch (type.toLowerCase()) {\r\n    case \"browser\":\r\n      parent.removeChild(child);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction insertBefore(parent, child, prevChild, type = \"browser\") {\r\n  switch (type.toLowerCase()) {\r\n    case \"browser\":\r\n      // document.insertBefore\r\n      parent.insertBefore(child, prevChild);\r\n      break;\r\n  }\r\n}\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-15 21:16:58\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-15 21:20:16\r\n * 执行生命周期的hook\r\n */\r\n\r\nexport function callHook(vm, hook) {\r\n  const handles = vm.$options[hook];\r\n  // 生命周期的钩子的this 都是当前实例\r\n  handles?.forEach((handle) => handle.call(vm));\r\n}\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-12 22:48:39\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-16 10:31:11\r\n */\r\nimport { initState } from \"./initState\";\r\nimport { compileToFunction } from \"./compiler\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nimport { mergeOptions } from \"./utils/merge\";\r\nimport { callHook } from \"./hooks/life-hook\";\r\nexport function initMixin(Vue) {\r\n  /**\r\n   * 初始化操作\r\n   * @param {*} options\r\n   */\r\n  Vue.prototype._init = function _init(options) {\r\n    // console.log(\"init------------>\", options);\r\n    // vue app.$options = options 获取用户配置\r\n    const vm = this;\r\n    // 合并 Vue.options 和 传入的配置项\r\n    // TODO 目前还只是可以合并生命周期和普通属性等，对于 data 这种选项还需要特殊的合并处理\r\n    vm.$options = mergeOptions(this.constructor.options, options); // vue认为 $xxx 就是表示vue的属性\r\n    console.log(vm.$options);\r\n    // 执行初始化之前，执行 beforeCreate 的钩子\r\n    callHook(vm, \"beforeCreate\");\r\n    // 初始化状态\r\n    // TODO computed methods watcher ....\r\n    initState(vm);\r\n    // 状态初始化完毕之后，执行 created 钩子\r\n    callHook(vm, \"created\");\r\n    // TODO 编译模板 等...\r\n    // el vm挂载到的dom容器\r\n    if (options.el) vm.$mount(options.el);\r\n  };\r\n  Vue.prototype.$mount = function $mount(el) {\r\n    const vm = this;\r\n    const ops = vm.$options;\r\n    el = document.querySelector(el);\r\n    let template;\r\n    // 是否有render函数\r\n    // 没有render\r\n    if (!ops.render) {\r\n      // 没有template选项 但是写了el 直接用el作为模板\r\n      if (!ops.template && el) template = el.outerHTML;\r\n      else if (el) template = ops.template;\r\n    }\r\n    // 有template 直接用模板\r\n    if (template) {\r\n      // TODO 去除开头和结尾的空白符 m是忽略换行 进行多行匹配\r\n      // template = template.trim();\r\n      template = template.replace(/^\\s+|\\s+$/gm, \"\");\r\n      // 编译模板 生成 render函数\r\n      const render = compileToFunction(template);\r\n      ops.render = render;\r\n    }\r\n    // console.log(\"$mount template-------------->\", template);\r\n    // 调用 render 实现页面渲染\r\n    // console.log(ops.render);\r\n    // 组件的挂载\r\n    mountComponent(vm, el);\r\n    /**\r\n     * script 标签引用的是vue.global.js 这个编译过程是在浏览器运行的\r\n     * runtime是不包含模板编译的，整个编译打包的时候是通过loader来转义.vue文件的\r\n     * 用runtime的时候 不能使用模板template（可以使用.vue，loader处理就行了）\r\n     */\r\n  };\r\n}\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-12 22:45:40\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-15 20:42:57\r\n */\r\n\r\nimport { initGlobalStaticAPI } from \"./global-static-api\";\r\nimport { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\nimport { nextTick } from \"./observe/watcher\";\r\n\r\n/**\r\n * Vue构造函数\r\n * @param {*} options 用户选项\r\n */\r\nfunction Vue(options) {\r\n  // 初始化\r\n  this._init(options);\r\n}\r\n// TODO 暂时先这样写\r\nVue.prototype.$nextTick = nextTick;\r\ninitMixin(Vue); // 扩展_init方法\r\ninitLifeCycle(Vue); // 拓展生命周期 进行组件的挂载和渲染的方法\r\n\r\n// 静态方法\r\ninitGlobalStaticAPI(Vue);\r\n\r\nexport default Vue;\r\n"],"names":["strategy","LIFE_CYCLE","forEach","hook","s1","s2","mergeOptions","opts","options","source1","source2","key","mergeField","hasOwnProperty","length","splice","initGlobalStaticAPI","Vue","mixin","isFunction","source","isObject","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","method","inserted","ob","__ob__","args","slice","console","log","observeArray","res","call","id","Dep","subs","target","addDep","watcher","push","update","watcherStack","pushWatcherTarget","popWatcherTarget","pop","Observe","data","defineProperty","value","isArray","setPrototypeOf","arrayProto","walk","keys","defineReactive","item","observe","obj","dep","get","depend","set","newVal","notify","Watcher","vm","updateComponent","renderWatcher","getter","deps","depsId","Set","lazy","dirty","val","has","add","addSub","queueWatcher","i","queue","pending","nextTick","flushSchedulerQueue","flushQueue","run","callbacks","waiting","flushCallbacks","cbs","cb","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","proxy","enumerable","initState","$options","initData","computed","initComputed","configurable","writable","watchers","_computedWatchers","userDef","setter","defineComputed","createComputedGetter","lazyGetter","evaluate","ELEMENT_TYPE","TEXT_TYPE","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","defaultTagRE","parseHTML","html","stack","curParent","root","createASTElement","tag","attrs","type","children","parent","start","isSelfClose","node","chars","text","replace","end","parseStartTag","match","tagName","advance","attr","name","endsWith","substring","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunction","template","ast","renderCodeBlock","codeGenerator","render","Function","generateChildren","code","generateProps","str","style","split","trim","JSON","stringify","map","child","generateChild","join","test","tokens","lastIndex","exec","index","vnode","props","createElementVNode","createTextVNode","undefined","mountComponent","container","vNodes","_render","_update","initLifeCycle","defineProperties","el","$el","patch","_c","arguments","_v","_s","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newEle","createEle","insertBefore","nextSibling","removeChild","createElement","patchProps","appendChild","k","setAttribute","toLowerCase","prevChild","callHook","handles","handle","initMixin","_init","constructor","$mount","ops","querySelector","outerHTML","$nextTick"],"mappings":"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"}