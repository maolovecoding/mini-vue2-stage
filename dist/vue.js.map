{"version":3,"file":"vue.js","sources":["../src/utils/index.js","../src/observe/array.js","../src/observe/index.js","../src/initState.js","../src/compiler/type.js","../src/compiler/parser.js","../src/compiler/index.js","../src/vdom/index.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["/**\r\n * 是否是函数\r\n * @param {*} source 对象\r\n * @returns\r\n */\r\nexport function isFunction(source) {\r\n  return typeof source === \"function\";\r\n}\r\n\r\nexport const isObject = (source) => {\r\n  return source != null && typeof source === \"object\";\r\n};\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-13 10:02:33\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-13 10:26:05\r\n * @Description 重写数组中的变异方法\r\n */\r\nlet oldArrayProto = Array.prototype;\r\n\r\nlet newArrayProto = Object.create(oldArrayProto);\r\n/**\r\n * 七个变异方法 会改变数组本身的方法\r\n * @type {Array<string>}\r\n */\r\nconst methods = [\r\n  \"push\",\r\n  \"pop\",\r\n  \"unshift\",\r\n  \"shift\",\r\n  \"reverse\",\r\n  \"sort\",\r\n  \"splice\",\r\n];\r\nmethods.forEach((method) => {\r\n  // 重写数组的方法 内部调用的还是原来的方法\r\n  // 函数的劫持 切片编程\r\n  newArrayProto[method] = function (...args) {\r\n    // 如果新增的数组元素是对象 需要再次劫持\r\n    let inserted;\r\n    // Observe实例\r\n    const ob = this.__ob__;\r\n    switch (method) {\r\n      case \"push\":\r\n      case \"unshift\": // 插入元素\r\n        // 新增的元素 可能是对象\r\n        inserted = args;\r\n        break;\r\n      case \"splice\": // 数组最强方法 splice(start, delCount, ...新增元素)\r\n        inserted = args.slice(2); // 新增的元素\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    console.log(\"新增的内容------------------>\", inserted);\r\n    if (inserted) {\r\n      // 观测新增的内容\r\n      ob.observeArray(inserted);\r\n    }\r\n    console.log(`重写的${method}方法被调用------> this = `, this);\r\n    const res = oldArrayProto[method].call(this, ...args);\r\n    return res;\r\n  };\r\n});\r\nexport default newArrayProto;\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-13 08:51:06\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-13 19:28:17\r\n */\r\nimport { isObject } from \"../utils\";\r\nimport arrayProto from \"./array\";\r\nclass Observe {\r\n  constructor(data) {\r\n    // 记录this 也是一个标识 如果对象上有了该属性 标识已经被观测\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      value: this, // observe的实例\r\n    });\r\n    // 如果劫持的数据是数组\r\n    if (Array.isArray(data)) {\r\n      // 重写数组上的7个方法 这7个变异方法是可以修改数组本身的\r\n      Object.setPrototypeOf(data, arrayProto);\r\n      // 对于数组元素是 引用类型的，需要深度观测的\r\n      this.observeArray(data);\r\n    } else {\r\n      // Object.defineProperty 只能劫持已经存在的属性（vue提供单独的api $set $delete 为了增加新的响应式属性）\r\n      this.walk(data);\r\n    }\r\n  }\r\n  /**\r\n   * 循环对象 对属性依次劫持 重新‘定义’属性\r\n   * @param {*} data\r\n   */\r\n  walk(data) {\r\n    Object.keys(data).forEach((key) => defineReactive(data, key, data[key]));\r\n  }\r\n  /**\r\n   * 劫持数组元素 是普通原始值不会劫持\r\n   * @param {Array} data\r\n   */\r\n  observeArray(data) {\r\n    data.forEach((item) => observe(item));\r\n  }\r\n}\r\n/**\r\n * 定义目标对象上的属性为响应式\r\n * @param {Object} obj\r\n * @param {string|symbol} key\r\n * @param {*} value\r\n */\r\nexport function defineReactive(obj, key, value) {\r\n  // 如果属性也是对象 再次劫持\r\n  observe(value);\r\n  Object.defineProperty(obj, key, {\r\n    get() {\r\n      return value;\r\n    },\r\n    set(newVal) {\r\n      if (newVal === value) return;\r\n      // 新值是对象 则需要重新观测\r\n      observe(newVal);\r\n      value = newVal;\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * 数据劫持方法\r\n * @param {*} data 需要劫持的数据\r\n */\r\nexport function observe(data) {\r\n  // 不是对象 不需要劫持\r\n  if (!isObject(data)) return;\r\n  // 如果一个对象被劫持过了，那么不需要再次被劫持了\r\n  if (data.__ob__ instanceof Observe) return data.__ob__;\r\n  // console.log(\"observe---------------->\", data);\r\n  return new Observe(data);\r\n}\r\n","import { isFunction } from \"./utils\";\r\nimport { observe } from \"./observe\";\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    enumerable: true,\r\n    get() {\r\n      return vm[target][key];\r\n    },\r\n    set(newVal) {\r\n      vm[target][key] = newVal;\r\n    },\r\n  });\r\n}\r\n/**\r\n * 初始化实例\r\n * @param {*} vm vue实例\r\n */\r\nfunction initState(vm) {\r\n  const opts = vm.$options; // 获取所有选项\r\n  if (opts.data) {\r\n    // data 初始化\r\n    initData(vm);\r\n  }\r\n}\r\n/**\r\n * 初始化 data\r\n * @param {*} vm 实例\r\n */\r\nfunction initData(vm) {\r\n  // data可能是函数 也可能是对象\r\n  let data = vm.$options.data;\r\n  // data是函数 执行一下\r\n  if (isFunction(data)) data = data.call(vm);\r\n  Object.defineProperty(vm, \"_data\", {\r\n    configurable: true,\r\n    // enumerable: false,\r\n    writable: true,\r\n    value: data,\r\n  });\r\n  console.log(\"initData------------>\", data);\r\n  // 数据劫持\r\n  observe(data);\r\n  // 把 vm._data 用vm来代理 访问 vm.name -> vm._data.name\r\n  for (const key in data) {\r\n    proxy(vm, \"_data\", key);\r\n  }\r\n}\r\n\r\nexport { initState };\r\n","/*\r\n * @Author: 毛毛 \r\n * @Date: 2022-04-14 13:09:23 \r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-14 13:10:07\r\n * 节点类型\r\n */\r\n// 元素类型\r\nconst ELEMENT_TYPE = 1;\r\n// 文本类型\r\nconst TEXT_TYPE = 3;\r\n\r\nexport{\r\n  ELEMENT_TYPE,\r\n  TEXT_TYPE\r\n}","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-13 12:25:22\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-14 14:28:15\r\n * @Description 模板编译\r\n * 解析模板 可以使用现成的包 html-parser2\r\n */\r\nimport { ELEMENT_TYPE, TEXT_TYPE } from \"./type\";\r\n/**\r\n * 匹配标签名\r\n * 开头不能包含特殊字符和数字\r\n * 第二个字符开始 可以是任意字符了 / \\ 空白符 . 都可以\r\n *  div _div _ab88 a_9.//a\r\n *\r\n */\r\nconst ncname = \"[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*\";\r\n/**\r\n * 捕获 标签名\r\n * 注意 ?: 只匹配不捕获\r\n * 这里的匹配标签名 后面还有:的这种 是带命名空间的标签 比如 a:b\r\n */\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\n// ((?:[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*\\\\:)?[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*)\r\n/**\r\n * 匹配到的分组是一个 标签名 <div\r\n */\r\n// ^<((?:[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*\\\\:)?[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*)\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n/**\r\n * 匹配标签名结束 <\\/div> 因为 /具有特殊含义\r\n */\r\n// ^<\\\\/((?:[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*\\\\:)?[a-zA-Z_][\\\\-\\\\.0-9a-zA-Z]*)[^>]*>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// `^<\\\\/${qnameCapture}[^>]*>`\r\n/**\r\n * 匹配属性  a=\"abc\" a='abc' a=abc a\r\n * 分组一的值就是键key 分组3/4/5匹配到的是value\r\n */\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\r\n/**\r\n * 匹配标签结束\r\n * 标签可能自闭合 <div></div> <br/>  />\r\n */\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n/**\r\n * 匹配 双花括号语法 {{}} 匹配到的是就是双花括号的 变量\r\n */\r\nexport const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n/**\r\n * 解析 模板\r\n * @param {string} html 模板字符串\r\n * vue2采用正则编译解析 vue3不是采用正则了\r\n */\r\nfunction parseHTML(html) {\r\n  /**\r\n   * 最终需要转换为一颗抽象语法树 ast abstract syntax tree\r\n   * 可以借助栈思想\r\n   * 栈中的最后一个标签元素 就是当前正在匹配的元素的父元素\r\n   * @type {Array<{tag:string,type:number,children:Array}>}\r\n   */\r\n  const stack = [];\r\n  // 栈帧 指向最后一个元素\r\n  let curParent = null;\r\n  let root = null; // 根元素\r\n\r\n  /**\r\n   * 创建 ast\r\n   * @param {string} tag 标签名\r\n   * @param {Array<{name:string,value:any}>} attrs 属性\r\n   * @returns\r\n   */\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null,\r\n    };\r\n  }\r\n  /**\r\n   * 处理开始标签 并且开始构造抽象语法树\r\n   * @param {string} tag\r\n   * @param {Array<{name:string,value:any}>} attrs\r\n   * @param {boolean} isSelfClose 是否自闭合\r\n   */\r\n  function start(tag, attrs, isSelfClose) {\r\n    // console.log(tag, attrs);\r\n    // 当前节点\r\n    const node = createASTElement(tag, attrs);\r\n    // 根节点\r\n    root = root ?? node;\r\n    // 更新当前节点的父节点 更新父元素的子元素节点\r\n    curParent && ((node.parent = curParent), curParent.children.push(node));\r\n    // TODO 是自闭合标签 不需要入栈的\r\n    if (isSelfClose) return;\r\n    // 新节点入栈\r\n    stack.push(node);\r\n    // 更新当前指向的最前面的父节点\r\n    curParent = node;\r\n    // console.log(node, root);\r\n  }\r\n  /**\r\n   * 处理文本内容\r\n   * @param {string} text\r\n   */\r\n  function chars(text) {\r\n    // 去除空字符串\r\n    text = text.replace(/^\\s+|\\s+$/gm, \"\");\r\n    // console.log(text);\r\n    // 文本节点 插入到父元素的孩子中\r\n    text &&\r\n      curParent.children.push({\r\n        type: TEXT_TYPE,\r\n        text,\r\n        parent: curParent,\r\n      });\r\n  }\r\n  /**\r\n   * 处理结束标签\r\n   * @param {string} tag 标签名称\r\n   */\r\n  function end(tag) {\r\n    // console.log(tag);\r\n    // 弹出最后一个栈元素 并更新指向的父节点\r\n    const node = stack.pop();\r\n    // TODO 可以根据tag和node.tag 校验标签是否合法等 也需要考虑自闭合标签\r\n    if (tag !== node.tag) {\r\n      // console.log(\"标签不合法---------\",tag, node);\r\n    }\r\n    curParent = stack[stack.length - 1];\r\n  }\r\n  /**\r\n   * 解析模板的开始标签\r\n   * @param {string} html 模板字符串\r\n   */\r\n  function parseStartTag() {\r\n    // 匹配标签起始位置\r\n    const start = html.match(startTagOpen);\r\n    if (start) {\r\n      // 是开始标签\r\n      const match = {\r\n        // 标签名\r\n        tagName: start[1],\r\n        // 属性\r\n        attrs: [],\r\n        // 是否是自闭合标签\r\n        isSelfClose: false,\r\n      };\r\n      advance(start[0].length);\r\n      // 不是标签结束位置 一直匹配\r\n      let attr, end;\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        // 去除属性\r\n        advance(attr[0].length);\r\n        match.attrs.push({\r\n          // 属性名\r\n          name: attr[1],\r\n          // 属性值 key=\"value\" key='value' key=value\r\n          // key  对于只有key的这种，我们给默认值true\r\n          value: attr[3] || attr[4] || attr[5] || true,\r\n        });\r\n      }\r\n      // 去除标签的右闭合箭头  <div> 中的 > 或者自闭合标签 <br/> />\r\n      if (end) {\r\n        advance(end[0].length);\r\n        // 自闭合\r\n        if (end[0].endsWith(\"/>\")) match.isSelfClose = true;\r\n      }\r\n      // console.log(match);\r\n      return match;\r\n    }\r\n    // 不是开始标签\r\n    return false;\r\n  }\r\n  /**\r\n   * 字符串截取\r\n   * @param {number} start 截取的起始位置\r\n   */\r\n  function advance(start) {\r\n    html = html.substring(start);\r\n  }\r\n  // vue2中 html 开头肯定是 <  <div>hello</div>\r\n  while (html) {\r\n    // 如果indexOf中索引的值是 0 则说明是个开始标签 或者 结束标签\r\n    // > 0 是文本的结束位置  </div>\r\n    let textEnd = html.indexOf(\"<\");\r\n    if (textEnd === 0) {\r\n      // 解析开始标签 开始标签及其标签内的属性等\r\n      const startTagMatch = parseStartTag(); // 匹配结果\r\n      if (startTagMatch) {\r\n        // console.log(startTagMatch);\r\n        start(\r\n          startTagMatch.tagName,\r\n          startTagMatch.attrs,\r\n          startTagMatch.isSelfClose\r\n        );\r\n        continue;\r\n      }\r\n      // 去除结束标签 来到这里 肯定是 </xxx>\r\n      const endTagMatch = html.match(endTag);\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length);\r\n        // console.log(endTagMatch, html);\r\n        end(endTagMatch[1]);\r\n        continue;\r\n      }\r\n    }\r\n    // 文本内容  adb<h2></h2>\r\n    if (textEnd > 0) {\r\n      // 获取文本内容\r\n      const text = html.substring(0, textEnd);\r\n      if (text) {\r\n        advance(text.length); // 解析到的文本\r\n        chars(text);\r\n      }\r\n      // console.log(html);\r\n    }\r\n  }\r\n  // console.log(root);\r\n  // 返回 生成的vNode树 ast\r\n  return root;\r\n}\r\n\r\nexport { parseHTML };\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-14 12:35:12\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-14 20:26:22\r\n * @Description 模板编译\r\n * 模板引擎实现原理： with + new Function\r\n */\r\n\r\nimport { parseHTML, defaultTagRE } from \"./parser\";\r\nimport { TEXT_TYPE, ELEMENT_TYPE } from \"./type\";\r\n/**\r\n * 生成 render函数\r\n * @param {*} template 模板\r\n * @returns {Function}\r\n */\r\nexport function compileToFunction(template) {\r\n  // console.log(\"compileToFunction-------------->\" + template + \"---------\");\r\n  // 1. template 转 ast\r\n  const ast = parseHTML(template);\r\n  console.log(ast);\r\n  // 2. 生成render方法（该方法的执行结果是返回虚拟dom）\r\n  // TODO 三个方法 _v文本节点 _s把变量转为字符串 _c元素节点\r\n  // 2.1 生成render函数的返回代码块字符串形式\r\n  const renderCodeBlock = codeGenerator(ast);\r\n  // 2.2 生成render函数 new Function\r\n  // 生成的代码中，取变量的值的时候，并没有去当前组件实例的上下文中取值\r\n  // 而是直接 name age 所以这里绑定上下文（组件实例） name -> vm.name -> vm._data.name\r\n  // this -> render.call(thisArg)\r\n  const render = new Function(`with(this){\\n return ${renderCodeBlock}}`);\r\n  // console.log(render);\r\n  return render;\r\n}\r\n\r\n/**\r\n * 根据ast生成代码\r\n * @param {{tag:string,children:Array,type:number,text:string,attrs:Array}} ast\r\n */\r\nfunction codeGenerator(ast) {\r\n  const children = generateChildren(ast.children);\r\n  let code = `_c('${ast.tag}',${\r\n    ast.attrs.length > 0 ? generateProps(ast.attrs) : \"null\"\r\n  }${ast.children?.length ? `,${children}` : \"\"})`;\r\n  return code;\r\n}\r\n/**\r\n * 生成属性对象 {name:\"\",id:\"app\"}\r\n * @param {Array<{name:string|symbol,value:any}>} attrs\r\n */\r\nfunction generateProps(attrs) {\r\n  let str = \"\";\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    const attr = attrs[i];\r\n    if (attr.name === \"style\") {\r\n      // style:\"color:red;background-color:{{backgroundColor}}\"\r\n      // style:{color:\"red\",\"background-color\":\"{{backgroundColor}}\"}\r\n      let style = \"\";\r\n      // const style = {};\r\n      attr.value.split(\";\").forEach((item) => {\r\n        if (!item.trim()) return;\r\n        let [key, value] = item.split(\":\");\r\n        let match = null;\r\n        // defaultTagRE.lastIndex = 0;\r\n        match = defaultTagRE.exec(value);\r\n        if (match) {\r\n          value = `_s(${match[1]})`;\r\n        } else value = `'${value}'`;\r\n        // style[key] = value;\r\n        style += `'${key}':${value},`;\r\n        console.log(style);\r\n      });\r\n      str += `${attr.name}:{${style.slice(0, -1)}},`;\r\n    } else str += `${attr.name}:${JSON.stringify(attr.value)},`;\r\n  }\r\n  return `{${str.slice(0, -1)}}`;\r\n}\r\n/**\r\n * 生成节点的子节点数组对象\r\n * @param {*} children\r\n */\r\nfunction generateChildren(children) {\r\n  if (children) {\r\n    return children.map((child) => generateChild(child)).join(\",\");\r\n  }\r\n}\r\n/**\r\n * 根据节点生成子字符串形式\r\n * @param {*} node\r\n * @returns\r\n */\r\nfunction generateChild(node) {\r\n  switch (node.type) {\r\n    case ELEMENT_TYPE:\r\n      // 元素节点\r\n      // console.log(codeGenerator(node))\r\n      return codeGenerator(node);\r\n    case TEXT_TYPE:\r\n      // console.log(node.text)\r\n      // 文本节点\r\n      const text = node.text;\r\n      if (!defaultTagRE.test(text)) {\r\n        // 纯文本节点 没有 {{xx}}\r\n        return `_v(${JSON.stringify(text)})`;\r\n      }\r\n      // console.log(text);\r\n      const tokens = [];\r\n      // 匹配结果\r\n      let match = null;\r\n      defaultTagRE.lastIndex = 0;\r\n      // 最后一次匹配结果的起始索引位置\r\n      let lastIndex = 0;\r\n      while ((match = defaultTagRE.exec(text))) {\r\n        // console.log(match)\r\n        // 当前匹配的到的起始位置\r\n        let index = match.index;\r\n        if (index > lastIndex)\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n        tokens.push(`_s(${match[1].trim()})`);\r\n        lastIndex = index + match[0].length;\r\n      }\r\n      // {{age}}--- 最后一次匹配后还有内容\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)));\r\n      }\r\n      console.log(tokens);\r\n      return `_v(${tokens.join(\"+\")})`;\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-14 14:35:48\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-14 14:56:38\r\n * 虚拟dom 需要的方法\r\n */\r\n/**\r\n * 生成虚拟dom \r\n * 虚拟dom是和ast不一样的 -> ast是语法层面的转换，他描述的是语法本身（可以描述 js css html等等）\r\n * 我们的虚拟dom  是描述dom元素，可以增加自定义属性\r\n * @param {*} vm \r\n * @param {*} tag \r\n * @param {*} key \r\n * @param {*} props \r\n * @param {*} children \r\n * @param {*} text \r\n * @returns \r\n */\r\nfunction vnode(vm, tag, key, props, children, text) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    props,\r\n    children,\r\n    text,\r\n  };\r\n}\r\n// h函数 创建元素节点\r\nfunction createElementVNode(vm, tag, data = {}, ...children) {\r\n  const key = data?.key; // data可能是 null\r\n  key && delete data.key;\r\n  return vnode(vm, tag, key, data, children);\r\n}\r\n// _v 函数 创建文本节点\r\nfunction createTextVNode(vm, text) {\r\n  return vnode(vm, undefined, undefined, undefined, undefined, text);\r\n}\r\n\r\nexport {\r\n  createElementVNode,\r\n  createTextVNode as h,\r\n  createTextVNode,\r\n  createTextVNode as _c,\r\n};\r\n","import { createElementVNode, createTextVNode } from \"./vdom\";\r\n\r\n/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-14 14:10:39\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-14 20:42:46\r\n * 组件挂载 生命周期\r\n * vm._render() 生成虚拟节点 vNode\r\n * vm._update() 虚拟节点变成真实节点 dom\r\n */\r\nexport function mountComponent(vm, container) {\r\n  // 记录需要挂载的容器 $el\r\n  Object.defineProperty(vm, \"$el\", {\r\n    value: container,\r\n    writable: true,\r\n  });\r\n  // 1.调用render 产生虚拟节点 vNode\r\n  const vNodes = vm._render();\r\n  // 2. 根据虚拟dom 产生真实dom\r\n  vm._update(vNodes);\r\n  // 3. 挂载到container上\r\n}\r\n/**\r\n * 扩展原型方法\r\n * @param {*} Vue\r\n */\r\nexport function initLifeCycle(Vue) {\r\n  Object.defineProperties(Vue.prototype, {\r\n    _render: {\r\n      // 当渲染的时候，会去实例中取值，我们就可以将属性和视图绑定在一起\r\n      value: function _render() {\r\n        const vm = this;\r\n        // 绑定 this为组件实例\r\n        return vm.$options.render.call(vm);\r\n      },\r\n    },\r\n    _update: {\r\n      /**\r\n       * 将虚拟dom转为真实dom  vnode -> dom\r\n       * @param {*} vnode 虚拟dom节点\r\n       */\r\n      value: function _update(vnode) {\r\n        const vm = this;\r\n        // 挂载的容器\r\n        const el = vm.$el;\r\n        console.log(el);\r\n        // patch 更新 + 初始化\r\n        vm.$el = patch(el, vnode);\r\n        console.log(\"_update----------------->\", vnode);\r\n      },\r\n    },\r\n    // _c(\"div\",{name:'zs'},...children) 元素 虚拟dom\r\n    _c: {\r\n      value: function _c() {\r\n        // this -> vm\r\n        return createElementVNode(this, ...arguments);\r\n      },\r\n    },\r\n    // _v(text) 文本虚拟dom\r\n    _v: {\r\n      value: function _v() {\r\n        return createTextVNode(this, ...arguments);\r\n      },\r\n    },\r\n    // 就是变量字符串化\r\n    _s: {\r\n      value: function _s(value) {\r\n        // 对于不是对象的字符串，没必要再次转字符串了，不然会多出引号 zs -> \\\"zs\\\"\r\n        return typeof value === \"object\" ? JSON.stringify(value) : value;\r\n      },\r\n    },\r\n  });\r\n}\r\n/**\r\n * vue的核心流程：\r\n * 1. 创造响应式数据\r\n * 2. 模板编译 生成 ast\r\n * 3. ast 转为render函数 后续每次数据更新 只执行render函数(不需要再次进行ast的转换)\r\n * 4. render函数执行 生成 vNode节点（会使用到响应式数据）\r\n * 5. 根据vNode 生成 真实dom 渲染页面\r\n * 6. 数据更新 重新执行render\r\n */\r\n/**\r\n * 更新 | 初渲染时 第一个节点的值是真实元素\r\n * @param {*} oldVNode 旧vnode\r\n * @param {*} vnode 最新的vnode\r\n */\r\nfunction patch(oldVNode, vnode) {\r\n  const isRealElement = oldVNode.nodeType;\r\n  // 真实元素\r\n  if (isRealElement) {\r\n    const elm = oldVNode;\r\n    // 获取父节点 1. 元素节点 2. 文档节点 3. 文档碎片节点\r\n    const parentElm = elm.parentNode;\r\n    // console.log(parentElm)\r\n    const newEle = createEle(vnode);\r\n    // 插入新dom 移除父节点上的老dom节点\r\n    insertBefore(parentElm, newEle, elm.nextSibling);\r\n    removeChild(parentElm, elm);\r\n    // console.log(newEle)\r\n    return newEle;\r\n  }\r\n}\r\n\r\nfunction createEle(vnode) {\r\n  const { tag, props, children, text } = vnode;\r\n  if (typeof tag === \"string\") {\r\n    // 标签 div h2\r\n    // 将虚拟节点和真实节点想管理 根据虚拟节点可以找到真实节点 方便修改属性\r\n    vnode.el = createElement(tag);\r\n    // 更新属性\r\n    patchProps(vnode.el, props);\r\n    children.forEach((child) => {\r\n      appendChild(vnode.el, createEle(child));\r\n    });\r\n  } else if (typeof tag === \"object\") {\r\n    // 组件\r\n  } else {\r\n    // 创建文本节点\r\n    vnode.el = createTextNode(text);\r\n  }\r\n  return vnode.el;\r\n}\r\n/**\r\n * 更新属性到dom节点上\r\n * @param {*} el\r\n * @param {*} props\r\n */\r\nfunction patchProps(el, props) {\r\n  for (const key in props) {\r\n    if (key === \"style\") {\r\n      Object.keys(props[key]).forEach((k) => (el.style[k] = props[\"style\"][k]));\r\n    } else {\r\n      setAttribute(el, key, props[key]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction createElement(tag, type = \"browser\") {\r\n  switch (type.toLowerCase()) {\r\n    case \"browser\":\r\n      return document.createElement(tag);\r\n  }\r\n}\r\n\r\nfunction createTextNode(tag, type = \"browser\") {\r\n  switch (type.toLowerCase()) {\r\n    case \"browser\":\r\n      return document.createTextNode(tag);\r\n  }\r\n}\r\n\r\nfunction appendChild(parent, child, type = \"browser\") {\r\n  switch (type.toLowerCase()) {\r\n    case \"browser\":\r\n      parent.appendChild(child);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction setAttribute(el, key, value, type = \"browser\") {\r\n  switch (type.toLowerCase()) {\r\n    case \"browser\":\r\n      el.setAttribute(key, value);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction removeChild(parent, child, type = \"browser\") {\r\n  switch (type.toLowerCase()) {\r\n    case \"browser\":\r\n      parent.removeChild(child);\r\n      break;\r\n  }\r\n}\r\n\r\nfunction insertBefore(parent, child, prevChild, type = \"browser\") {\r\n  switch (type.toLowerCase()) {\r\n    case \"browser\":\r\n      // document.insertBefore\r\n      parent.insertBefore(child, prevChild);\r\n      break;\r\n  }\r\n}\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-12 22:48:39\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-14 14:11:45\r\n */\r\nimport { initState } from \"./initState\";\r\nimport { compileToFunction } from \"./compiler\";\r\nimport { mountComponent } from \"./lifecycle\";\r\nexport function initMixin(Vue) {\r\n  /**\r\n   * 初始化操作\r\n   * @param {*} options\r\n   */\r\n  Vue.prototype._init = function _init(options) {\r\n    // console.log(\"init------------>\", options);\r\n    // vue app.$options = options 获取用户配置\r\n    const vm = this;\r\n    vm.$options = options; // vue认为 $xxx 就是表示vue的属性\r\n    // 初始化状态\r\n    initState(vm);\r\n    // TODO 编译模板 等...\r\n    // el vm挂载到的dom容器\r\n    if (options.el) vm.$mount(options.el);\r\n  };\r\n  Vue.prototype.$mount = function $mount(el) {\r\n    const vm = this;\r\n    const ops = vm.$options;\r\n    el = document.querySelector(el);\r\n    let template;\r\n    // 是否有render函数\r\n    // 没有render\r\n    if (!ops.render) {\r\n      // 没有template选项 但是写了el 直接用el作为模板\r\n      if (!ops.template && el) template = el.outerHTML;\r\n      else if (el) template = ops.template;\r\n    }\r\n    // 有template 直接用模板\r\n    if (template) {\r\n      // TODO 去除开头和结尾的空白符 m是忽略换行 进行多行匹配\r\n      // template = template.trim();\r\n      template = template.replace(/^\\s+|\\s+$/gm, \"\");\r\n      // 编译模板 生成 render函数\r\n      const render = compileToFunction(template);\r\n      ops.render = render;\r\n    }\r\n    // console.log(\"$mount template-------------->\", template);\r\n    // 调用 render 实现页面渲染\r\n    console.log(ops.render);\r\n    // 组件的挂载\r\n    mountComponent(vm, el);\r\n    /**\r\n     * script 标签引用的是vue.global.js 这个编译过程是在浏览器运行的\r\n     * runtime是不包含模板编译的，整个编译打包的时候是通过loader来转义.vue文件的\r\n     * 用runtime的时候 不能使用模板template（可以使用.vue，loader处理就行了）\r\n     */\r\n  };\r\n}\r\n","/*\r\n * @Author: 毛毛\r\n * @Date: 2022-04-12 22:45:40\r\n * @Last Modified by: 毛毛\r\n * @Last Modified time: 2022-04-14 14:21:19\r\n */\r\n\r\nimport { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\n\r\n/**\r\n * Vue构造函数\r\n * @param {*} options 用户选项\r\n */\r\nfunction Vue(options) {\r\n  // 初始化\r\n  this._init(options);\r\n}\r\ninitMixin(Vue); // 扩展_init方法\r\ninitLifeCycle(Vue); // 拓展生命周期 进行组件的挂载和渲染的方法\r\nexport default Vue;\r\n"],"names":["isFunction","source","isObject","oldArrayProto","Array","prototype","newArrayProto","Object","create","methods","forEach","method","inserted","ob","__ob__","args","slice","console","log","observeArray","res","call","Observe","data","defineProperty","value","isArray","setPrototypeOf","arrayProto","walk","keys","key","defineReactive","item","observe","obj","get","set","newVal","proxy","vm","target","enumerable","initState","opts","$options","initData","configurable","writable","ELEMENT_TYPE","TEXT_TYPE","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","defaultTagRE","parseHTML","html","stack","curParent","root","createASTElement","tag","attrs","type","children","parent","start","isSelfClose","node","push","chars","text","replace","end","pop","length","parseStartTag","match","tagName","advance","attr","name","endsWith","substring","textEnd","indexOf","startTagMatch","endTagMatch","compileToFunction","template","ast","renderCodeBlock","codeGenerator","render","Function","generateChildren","code","generateProps","str","i","style","split","trim","exec","JSON","stringify","map","child","generateChild","join","test","tokens","lastIndex","index","vnode","props","createElementVNode","createTextVNode","undefined","mountComponent","container","vNodes","_render","_update","initLifeCycle","Vue","defineProperties","el","$el","patch","_c","arguments","_v","_s","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newEle","createEle","insertBefore","nextSibling","removeChild","createElement","patchProps","appendChild","createTextNode","k","setAttribute","toLowerCase","document","prevChild","initMixin","_init","options","$mount","ops","querySelector","outerHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACA;EACA;EACA;EACA;EACO,SAASA,UAAT,CAAoBC,MAApB,EAA4B;EACjC,EAAO,OAAA,OAAOA,MAAP,KAAkB,UAAzB,CAAA;EACD,CAAA;EAEM,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACD,MAAD,EAAY;EAClC,EAAA,OAAOA,MAAM,IAAI,IAAV,IAAkB,OAAOA,CAAAA,MAAP,MAAkB,QAA3C,CAAA;EACD,CAFM;;ECTP;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIE,aAAa,GAAGC,KAAK,CAACC,SAA1B,CAAA;EAEA,IAAIC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcL,aAAd,CAApB,CAAA;EACA;EACA;EACA;EACA;;EACA,IAAMM,OAAO,GAAG,CACd,MADc,EAEd,KAFc,EAGd,SAHc,EAId,OAJc,EAKd,SALc,EAMd,MANc,EAOd,QAPc,CAAhB,CAAA;EASAA,OAAO,CAACC,OAAR,CAAgB,UAACC,MAAD,EAAY;EAC1B;EACA;EACAL,EAAAA,aAAa,CAACK,MAAD,CAAb,GAAwB,YAAmB;EAAA,IAAA,IAAA,qBAAA,CAAA;;EACzC;EACA,IAAIC,IAAAA,QAAJ,CAFyC;;EAIzC,IAAMC,IAAAA,EAAE,GAAG,IAAA,CAAKC,MAAhB,CAAA;;EAJyC,IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAANC,IAAM,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;EAANA,MAAAA,IAAM,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,KAAA;;EAKzC,IAAA,QAAQJ,MAAR;EACE,MAAA,KAAK,MAAL,CAAA;EACA,MAAA,KAAK,SAAL;EAAgB;EACd;EACAC,QAAAA,QAAQ,GAAGG,IAAX,CAAA;EACA,QAAA,MAAA;;EACF,MAAA,KAAK,QAAL;EAAe;EACbH,QAAAA,QAAQ,GAAGG,IAAI,CAACC,KAAL,CAAW,CAAX,CAAX,CADF;;EAEE,QAAA,MAAA;EARJ,KAAA;;EAYAC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCN,QAAxC,CAAA,CAAA;;EACA,IAAA,IAAIA,QAAJ,EAAc;EACZ;EACAC,MAAAA,EAAE,CAACM,YAAH,CAAgBP,QAAhB,CAAA,CAAA;EACD,KAAA;;EACDK,IAAAA,OAAO,CAACC,GAAR,CAAkBP,oBAAAA,CAAAA,MAAAA,CAAAA,MAAlB,oDAAgD,IAAhD,CAAA,CAAA;;EACA,IAAA,IAAMS,GAAG,GAAG,CAAAjB,qBAAAA,GAAAA,aAAa,CAACQ,MAAD,CAAb,EAAsBU,IAAtB,CAAA,KAAA,CAAA,qBAAA,EAAA,CAA2B,IAA3B,CAAA,CAAA,MAAA,CAAoCN,IAApC,CAAZ,CAAA,CAAA;;EACA,IAAA,OAAOK,GAAP,CAAA;EACD,GAzBD,CAAA;EA0BD,CA7BD,CAAA;;MCfME;EACJ,EAAA,SAAA,OAAA,CAAYC,IAAZ,EAAkB;EAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;EAChB;EACAhB,IAAAA,MAAM,CAACiB,cAAP,CAAsBD,IAAtB,EAA4B,QAA5B,EAAsC;EACpCE,MAAAA,KAAK,EAAE,IAD6B;;EAAA,KAAtC,EAFgB;;EAMhB,IAAA,IAAIrB,KAAK,CAACsB,OAAN,CAAcH,IAAd,CAAJ,EAAyB;EACvB;EACAhB,MAAAA,MAAM,CAACoB,cAAP,CAAsBJ,IAAtB,EAA4BK,aAA5B,EAFuB;;EAIvB,MAAKT,IAAAA,CAAAA,YAAL,CAAkBI,IAAlB,CAAA,CAAA;EACD,KALD,MAKO;EACL;EACA,MAAKM,IAAAA,CAAAA,IAAL,CAAUN,IAAV,CAAA,CAAA;EACD,KAAA;EACF,GAAA;EACD;EACF;EACA;EACA;;;;;EACE,IAAA,KAAA,EAAA,SAAA,IAAA,CAAKA,IAAL,EAAW;EACThB,MAAAA,MAAM,CAACuB,IAAP,CAAYP,IAAZ,CAAkBb,CAAAA,OAAlB,CAA0B,UAACqB,GAAD,EAAA;EAAA,QAASC,OAAAA,cAAc,CAACT,IAAD,EAAOQ,GAAP,EAAYR,IAAI,CAACQ,GAAD,CAAhB,CAAvB,CAAA;EAAA,OAA1B,CAAA,CAAA;EACD,KAAA;EACD;EACF;EACA;EACA;;;;EACE,IAAA,KAAA,EAAA,SAAA,YAAA,CAAaR,IAAb,EAAmB;EACjBA,MAAAA,IAAI,CAACb,OAAL,CAAa,UAACuB,IAAD,EAAA;EAAA,QAAUC,OAAAA,OAAO,CAACD,IAAD,CAAjB,CAAA;EAAA,OAAb,CAAA,CAAA;EACD,KAAA;;;;;EAEH;EACA;EACA;EACA;EACA;EACA;;;EACO,SAASD,cAAT,CAAwBG,GAAxB,EAA6BJ,GAA7B,EAAkCN,KAAlC,EAAyC;EAC9C;EACAS,EAAAA,OAAO,CAACT,KAAD,CAAP,CAAA;EACAlB,EAAAA,MAAM,CAACiB,cAAP,CAAsBW,GAAtB,EAA2BJ,GAA3B,EAAgC;EAC9BK,IAAAA,GAD8B,EACxB,SAAA,GAAA,GAAA;EACJ,MAAA,OAAOX,KAAP,CAAA;EACD,KAH6B;EAI9BY,IAAAA,GAJ8B,EAI1BC,SAAAA,GAAAA,CAAAA,MAJ0B,EAIlB;EACV,MAAA,IAAIA,MAAM,KAAKb,KAAf,EAAsB,OADZ;;EAGVS,MAAAA,OAAO,CAACI,MAAD,CAAP,CAAA;EACAb,MAAAA,KAAK,GAAGa,MAAR,CAAA;EACD,KAAA;EAT6B,GAAhC,CAAA,CAAA;EAWD,CAAA;EAED;EACA;EACA;EACA;;EACO,SAASJ,OAAT,CAAiBX,IAAjB,EAAuB;EAC5B;EACA,EAAA,IAAI,CAACrB,QAAQ,CAACqB,IAAD,CAAb,EAAqB,OAFO;;EAI5B,EAAIA,IAAAA,IAAI,CAACT,MAAL,YAAuBQ,OAA3B,EAAoC,OAAOC,IAAI,CAACT,MAAZ,CAJR;;EAM5B,EAAA,OAAO,IAAIQ,OAAJ,CAAYC,IAAZ,CAAP,CAAA;EACD;;ECvED,SAASgB,KAAT,CAAeC,EAAf,EAAmBC,MAAnB,EAA2BV,GAA3B,EAAgC;EAC9BxB,EAAAA,MAAM,CAACiB,cAAP,CAAsBgB,EAAtB,EAA0BT,GAA1B,EAA+B;EAC7BW,IAAAA,UAAU,EAAE,IADiB;EAE7BN,IAAAA,GAF6B,EAEvB,SAAA,GAAA,GAAA;EACJ,MAAA,OAAOI,EAAE,CAACC,MAAD,CAAF,CAAWV,GAAX,CAAP,CAAA;EACD,KAJ4B;EAK7BM,IAAAA,GAL6B,EAKzBC,SAAAA,GAAAA,CAAAA,MALyB,EAKjB;EACVE,MAAAA,EAAE,CAACC,MAAD,CAAF,CAAWV,GAAX,IAAkBO,MAAlB,CAAA;EACD,KAAA;EAP4B,GAA/B,CAAA,CAAA;EASD,CAAA;EACD;EACA;EACA;EACA;;;EACA,SAASK,SAAT,CAAmBH,EAAnB,EAAuB;EACrB,EAAA,IAAMI,IAAI,GAAGJ,EAAE,CAACK,QAAhB,CADqB;;EAErB,EAAID,IAAAA,IAAI,CAACrB,IAAT,EAAe;EACb;EACAuB,IAAAA,QAAQ,CAACN,EAAD,CAAR,CAAA;EACD,GAAA;EACF,CAAA;EACD;EACA;EACA;EACA;;;EACA,SAASM,QAAT,CAAkBN,EAAlB,EAAsB;EACpB;EACA,EAAIjB,IAAAA,IAAI,GAAGiB,EAAE,CAACK,QAAH,CAAYtB,IAAvB,CAFoB;;EAIpB,EAAA,IAAIvB,UAAU,CAACuB,IAAD,CAAd,EAAsBA,IAAI,GAAGA,IAAI,CAACF,IAAL,CAAUmB,EAAV,CAAP,CAAA;EACtBjC,EAAAA,MAAM,CAACiB,cAAP,CAAsBgB,EAAtB,EAA0B,OAA1B,EAAmC;EACjCO,IAAAA,YAAY,EAAE,IADmB;EAEjC;EACAC,IAAAA,QAAQ,EAAE,IAHuB;EAIjCvB,IAAAA,KAAK,EAAEF,IAAAA;EAJ0B,GAAnC,CAAA,CAAA;EAMAN,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCK,IAArC,EAXoB;;EAapBW,EAAAA,OAAO,CAACX,IAAD,CAAP,CAboB;;EAepB,EAAA,KAAK,IAAMQ,GAAX,IAAkBR,IAAlB,EAAwB;EACtBgB,IAAAA,KAAK,CAACC,EAAD,EAAK,OAAL,EAAcT,GAAd,CAAL,CAAA;EACD,GAAA;EACF;;EC9CD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAMkB,YAAY,GAAG,CAArB;;EAEA,IAAMC,SAAS,GAAG,CAAlB;;ECVA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,IAAMC,MAAM,GAAG,6BAAf,CAAA;EACA;EACA;EACA;EACA;EACA;;EACA,IAAMC,YAAY,GAAUD,MAAAA,CAAAA,MAAAA,CAAAA,MAAV,kBAAwBA,MAAxB,EAAA,GAAA,CAAlB;;EAEA;EACA;EACA;EACA;;EACA,IAAME,YAAY,GAAG,IAAIC,MAAJ,CAAA,IAAA,CAAA,MAAA,CAAgBF,YAAhB,CAArB,CAAA,CAAA;EACA;EACA;EACA;EACA;;EACA,IAAMG,MAAM,GAAG,IAAID,MAAJ,gBAAmBF,YAAnB,EAAA,QAAA,CAAA,CAAf;;EAEA;EACA;EACA;EACA;;EACA,IAAMI,SAAS,GACb,2EADF,CAAA;EAEA;EACA;EACA;EACA;;EACA,IAAMC,aAAa,GAAG,YAAtB,CAAA;EACA;EACA;EACA;;EACO,IAAMC,YAAY,GAAG,0BAArB,CAAA;EACP;EACA;EACA;EACA;EACA;;EACA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;EACvB;EACF;EACA;EACA;EACA;EACA;EACE,EAAA,IAAMC,KAAK,GAAG,EAAd,CAPuB;;EASvB,EAAIC,IAAAA,SAAS,GAAG,IAAhB,CAAA;EACA,EAAA,IAAIC,IAAI,GAAG,IAAX,CAVuB;;EAYvB;EACF;EACA;EACA;EACA;EACA;;EACE,EAAA,SAASC,gBAAT,CAA0BC,GAA1B,EAA+BC,KAA/B,EAAsC;EACpC,IAAO,OAAA;EACLD,MAAAA,GAAG,EAAHA,GADK;EAELE,MAAAA,IAAI,EAAElB,YAFD;EAGLmB,MAAAA,QAAQ,EAAE,EAHL;EAILF,MAAAA,KAAK,EAALA,KAJK;EAKLG,MAAAA,MAAM,EAAE,IAAA;EALH,KAAP,CAAA;EAOD,GAAA;EACD;EACF;EACA;EACA;EACA;EACA;;;EACE,EAAA,SAASC,KAAT,CAAeL,GAAf,EAAoBC,KAApB,EAA2BK,WAA3B,EAAwC;EAAA,IAAA,IAAA,KAAA,CAAA;;EACtC;EACA;EACA,IAAMC,IAAAA,IAAI,GAAGR,gBAAgB,CAACC,GAAD,EAAMC,KAAN,CAA7B,CAHsC;;EAKtCH,IAAAA,IAAI,GAAGA,CAAAA,KAAAA,GAAAA,IAAH,MAAWS,IAAAA,IAAAA,KAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,GAAAA,IAAf,CALsC;;EAOtCV,IAAAA,SAAS,KAAMU,IAAI,CAACH,MAAL,GAAcP,SAAf,EAA2BA,SAAS,CAACM,QAAV,CAAmBK,IAAnB,CAAwBD,IAAxB,CAAhC,CAAT,CAPsC;;EAStC,IAAID,IAAAA,WAAJ,EAAiB,OATqB;;EAWtCV,IAAAA,KAAK,CAACY,IAAN,CAAWD,IAAX,EAXsC;;EAatCV,IAAAA,SAAS,GAAGU,IAAZ,CAbsC;EAevC,GAAA;EACD;EACF;EACA;EACA;;;EACE,EAASE,SAAAA,KAAT,CAAeC,IAAf,EAAqB;EACnB;EACAA,IAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,aAAb,EAA4B,EAA5B,CAAP,CAFmB;EAInB;;EACAD,IAAAA,IAAI,IACFb,SAAS,CAACM,QAAV,CAAmBK,IAAnB,CAAwB;EACtBN,MAAAA,IAAI,EAAEjB,SADgB;EAEtByB,MAAAA,IAAI,EAAJA,IAFsB;EAGtBN,MAAAA,MAAM,EAAEP,SAAAA;EAHc,KAAxB,CADF,CAAA;EAMD,GAAA;EACD;EACF;EACA;EACA;;;EACE,EAASe,SAAAA,GAAT,CAAaZ,GAAb,EAAkB;EAChB;EACA;EACA,IAAA,IAAMO,IAAI,GAAGX,KAAK,CAACiB,GAAN,EAAb,CAHgB;;EAKhB,IAAA,IAAIb,GAAG,KAAKO,IAAI,CAACP,GAAjB,EAAsB,CAErB;;EACDH,IAAAA,SAAS,GAAGD,KAAK,CAACA,KAAK,CAACkB,MAAN,GAAe,CAAhB,CAAjB,CAAA;EACD,GAAA;EACD;EACF;EACA;EACA;;;EACE,EAAA,SAASC,aAAT,GAAyB;EACvB;EACA,IAAA,IAAMV,KAAK,GAAGV,IAAI,CAACqB,KAAL,CAAW5B,YAAX,CAAd,CAAA;;EACA,IAAA,IAAIiB,KAAJ,EAAW;EACT;EACA,MAAA,IAAMW,KAAK,GAAG;EACZ;EACAC,QAAAA,OAAO,EAAEZ,KAAK,CAAC,CAAD,CAFF;EAGZ;EACAJ,QAAAA,KAAK,EAAE,EAJK;EAKZ;EACAK,QAAAA,WAAW,EAAE,KAAA;EAND,OAAd,CAAA;EAQAY,MAAAA,OAAO,CAACb,KAAK,CAAC,CAAD,CAAL,CAASS,MAAV,CAAP,CAVS;;EAYT,MAAIK,IAAAA,IAAJ,EAAUP,IAAV,CAAA;;EACA,MAAA,OACE,EAAEA,IAAG,GAAGjB,IAAI,CAACqB,KAAL,CAAWxB,aAAX,CAAR,MACC2B,IAAI,GAAGxB,IAAI,CAACqB,KAAL,CAAWzB,SAAX,CADR,CADF,EAGE;EACA;EACA2B,QAAAA,OAAO,CAACC,IAAI,CAAC,CAAD,CAAJ,CAAQL,MAAT,CAAP,CAAA;EACAE,QAAAA,KAAK,CAACf,KAAN,CAAYO,IAAZ,CAAiB;EACf;EACAY,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAFK;EAGf;EACA;EACA3D,UAAAA,KAAK,EAAE2D,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD,CAA1B,IAAiC,IAAA;EALzB,SAAjB,CAAA,CAAA;EAOD,OA1BQ;;;EA4BT,MAAA,IAAIP,IAAJ,EAAS;EACPM,QAAAA,OAAO,CAACN,IAAG,CAAC,CAAD,CAAH,CAAOE,MAAR,CAAP,CADO;;EAGP,QAAA,IAAIF,IAAG,CAAC,CAAD,CAAH,CAAOS,QAAP,CAAgB,IAAhB,CAAJ,EAA2BL,KAAK,CAACV,WAAN,GAAoB,IAApB,CAAA;EAC5B,OAhCQ;;;EAkCT,MAAA,OAAOU,KAAP,CAAA;EACD,KAtCsB;;;EAwCvB,IAAA,OAAO,KAAP,CAAA;EACD,GAAA;EACD;EACF;EACA;EACA;;;EACE,EAASE,SAAAA,OAAT,CAAiBb,KAAjB,EAAwB;EACtBV,IAAAA,IAAI,GAAGA,IAAI,CAAC2B,SAAL,CAAejB,KAAf,CAAP,CAAA;EACD,GAnIsB;;;EAqIvB,EAAA,OAAOV,IAAP,EAAa;EACX;EACA;EACA,IAAA,IAAI4B,OAAO,GAAG5B,IAAI,CAAC6B,OAAL,CAAa,GAAb,CAAd,CAAA;;EACA,IAAID,IAAAA,OAAO,KAAK,CAAhB,EAAmB;EACjB;EACA,MAAA,IAAME,aAAa,GAAGV,aAAa,EAAnC,CAFiB;;EAGjB,MAAA,IAAIU,aAAJ,EAAmB;EACjB;EACApB,QAAAA,KAAK,CACHoB,aAAa,CAACR,OADX,EAEHQ,aAAa,CAACxB,KAFX,EAGHwB,aAAa,CAACnB,WAHX,CAAL,CAAA;EAKA,QAAA,SAAA;EACD,OAXgB;;;EAajB,MAAA,IAAMoB,WAAW,GAAG/B,IAAI,CAACqB,KAAL,CAAW1B,MAAX,CAApB,CAAA;;EACA,MAAA,IAAIoC,WAAJ,EAAiB;EACfR,QAAAA,OAAO,CAACQ,WAAW,CAAC,CAAD,CAAX,CAAeZ,MAAhB,CAAP,CADe;;EAGfF,QAAAA,GAAG,CAACc,WAAW,CAAC,CAAD,CAAZ,CAAH,CAAA;EACA,QAAA,SAAA;EACD,OAAA;EACF,KAxBU;;;EA0BX,IAAIH,IAAAA,OAAO,GAAG,CAAd,EAAiB;EACf;EACA,MAAMb,IAAAA,IAAI,GAAGf,IAAI,CAAC2B,SAAL,CAAe,CAAf,EAAkBC,OAAlB,CAAb,CAAA;;EACA,MAAA,IAAIb,IAAJ,EAAU;EACRQ,QAAAA,OAAO,CAACR,IAAI,CAACI,MAAN,CAAP,CADQ;;EAERL,QAAAA,KAAK,CAACC,IAAD,CAAL,CAAA;EACD,OANc;;EAQhB,KAAA;EACF,GAxKsB;EA0KvB;;;EACA,EAAA,OAAOZ,IAAP,CAAA;EACD;;ECxND;EACA;EACA;EACA;EACA;;EACO,SAAS6B,iBAAT,CAA2BC,QAA3B,EAAqC;EAC1C;EACA;EACA,EAAA,IAAMC,GAAG,GAAGnC,SAAS,CAACkC,QAAD,CAArB,CAAA;EACA5E,EAAAA,OAAO,CAACC,GAAR,CAAY4E,GAAZ,EAJ0C;EAM1C;EACA;;EACA,EAAA,IAAMC,eAAe,GAAGC,aAAa,CAACF,GAAD,CAArC,CAR0C;EAU1C;EACA;EACA;;EACA,EAAMG,IAAAA,MAAM,GAAG,IAAIC,QAAJ,gCAAqCH,eAArC,EAAA,GAAA,CAAA,CAAf,CAb0C;;EAe1C,EAAA,OAAOE,MAAP,CAAA;EACD,CAAA;EAED;EACA;EACA;EACA;;EACA,SAASD,aAAT,CAAuBF,GAAvB,EAA4B;EAAA,EAAA,IAAA,aAAA,CAAA;;EAC1B,EAAA,IAAM1B,QAAQ,GAAG+B,gBAAgB,CAACL,GAAG,CAAC1B,QAAL,CAAjC,CAAA;EACA,EAAA,IAAIgC,IAAI,GAAA,MAAA,CAAA,MAAA,CAAUN,GAAG,CAAC7B,GAAd,EACN6B,IAAAA,CAAAA,CAAAA,MAAAA,CAAAA,GAAG,CAAC5B,KAAJ,CAAUa,MAAV,GAAmB,CAAnB,GAAuBsB,aAAa,CAACP,GAAG,CAAC5B,KAAL,CAApC,GAAkD,MAD5C,SAEL,CAAA4B,aAAAA,GAAAA,GAAG,CAAC1B,QAAJ,wDAAcW,MAAd,GAAA,GAAA,CAAA,MAAA,CAA2BX,QAA3B,CAAA,GAAwC,EAFnC,EAAR,GAAA,CAAA,CAAA;EAGA,EAAA,OAAOgC,IAAP,CAAA;EACD,CAAA;EACD;EACA;EACA;EACA;;;EACA,SAASC,aAAT,CAAuBnC,KAAvB,EAA8B;EAC5B,EAAIoC,IAAAA,GAAG,GAAG,EAAV,CAAA;;EACA,EAAA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrC,KAAK,CAACa,MAA1B,EAAkCwB,CAAC,EAAnC,EAAuC;EACrC,IAAA,IAAMnB,IAAI,GAAGlB,KAAK,CAACqC,CAAD,CAAlB,CAAA;;EACA,IAAA,IAAInB,IAAI,CAACC,IAAL,KAAc,OAAlB,EAA2B;EAAA,MAAA,CAAA,YAAA;EACzB;EACA;EACA,QAAA,IAAImB,KAAK,GAAG,EAAZ,CAHyB;;EAKzBpB,QAAAA,IAAI,CAAC3D,KAAL,CAAWgF,KAAX,CAAiB,GAAjB,CAAA,CAAsB/F,OAAtB,CAA8B,UAACuB,IAAD,EAAU;EACtC,UAAA,IAAI,CAACA,IAAI,CAACyE,IAAL,EAAL,EAAkB,OAAA;;EAClB,UAAA,IAAA,WAAA,GAAmBzE,IAAI,CAACwE,KAAL,CAAW,GAAX,CAAnB;EAAA,cAAA,YAAA,GAAA,cAAA,CAAA,WAAA,EAAA,CAAA,CAAA;EAAA,cAAK1E,GAAL,GAAA,YAAA,CAAA,CAAA,CAAA;EAAA,cAAUN,KAAV,GAAA,YAAA,CAAA,CAAA,CAAA,CAAA;;EACA,UAAA,IAAIwD,KAAK,GAAG,IAAZ,CAHsC;;EAKtCA,UAAAA,KAAK,GAAGvB,YAAY,CAACiD,IAAb,CAAkBlF,KAAlB,CAAR,CAAA;;EACA,UAAA,IAAIwD,KAAJ,EAAW;EACTxD,YAAAA,KAAK,GAASwD,KAAAA,CAAAA,MAAAA,CAAAA,KAAK,CAAC,CAAD,CAAd,EAAL,GAAA,CAAA,CAAA;EACD,WAFD,MAEOxD,KAAK,GAAA,GAAA,CAAA,MAAA,CAAOA,KAAP,EAAA,GAAA,CAAL,CAR+B;;;EAUtC+E,UAAAA,KAAK,IAAA,GAAA,CAAA,MAAA,CAAQzE,GAAR,EAAA,IAAA,CAAA,CAAA,MAAA,CAAgBN,KAAhB,EAAL,GAAA,CAAA,CAAA;EACAR,UAAAA,OAAO,CAACC,GAAR,CAAYsF,KAAZ,CAAA,CAAA;EACD,SAZD,CAAA,CAAA;EAaAF,QAAAA,GAAG,IAAA,EAAA,CAAA,MAAA,CAAOlB,IAAI,CAACC,IAAZ,EAAqBmB,IAAAA,CAAAA,CAAAA,MAAAA,CAAAA,KAAK,CAACxF,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAArB,EAAH,IAAA,CAAA,CAAA;EAlByB,OAAA,GAAA,CAAA;EAmB1B,KAnBD,MAmBOsF,GAAG,IAAOlB,EAAAA,CAAAA,MAAAA,CAAAA,IAAI,CAACC,IAAZ,EAAA,GAAA,CAAA,CAAA,MAAA,CAAoBuB,IAAI,CAACC,SAAL,CAAezB,IAAI,CAAC3D,KAApB,CAApB,EAAH,GAAA,CAAA,CAAA;EACR,GAAA;;EACD,EAAW6E,OAAAA,GAAAA,CAAAA,MAAAA,CAAAA,GAAG,CAACtF,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAX,EAAA,GAAA,CAAA,CAAA;EACD,CAAA;EACD;EACA;EACA;EACA;;;EACA,SAASmF,gBAAT,CAA0B/B,QAA1B,EAAoC;EAClC,EAAA,IAAIA,QAAJ,EAAc;EACZ,IAAA,OAAOA,QAAQ,CAAC0C,GAAT,CAAa,UAACC,KAAD,EAAA;EAAA,MAAWC,OAAAA,aAAa,CAACD,KAAD,CAAxB,CAAA;EAAA,KAAb,CAA8CE,CAAAA,IAA9C,CAAmD,GAAnD,CAAP,CAAA;EACD,GAAA;EACF,CAAA;EACD;EACA;EACA;EACA;EACA;;;EACA,SAASD,aAAT,CAAuBxC,IAAvB,EAA6B;EAC3B,EAAQA,QAAAA,IAAI,CAACL,IAAb;EACE,IAAA,KAAKlB,YAAL;EACE;EACA;EACA,MAAO+C,OAAAA,aAAa,CAACxB,IAAD,CAApB,CAAA;;EACF,IAAA,KAAKtB,SAAL;EACE;EACA;EACA,MAAA,IAAMyB,IAAI,GAAGH,IAAI,CAACG,IAAlB,CAAA;;EACA,MAAA,IAAI,CAACjB,YAAY,CAACwD,IAAb,CAAkBvC,IAAlB,CAAL,EAA8B;EAC5B;EACA,QAAA,OAAA,KAAA,CAAA,MAAA,CAAaiC,IAAI,CAACC,SAAL,CAAelC,IAAf,CAAb,EAAA,GAAA,CAAA,CAAA;EACD,OAPH;;;EASE,MAAA,IAAMwC,MAAM,GAAG,EAAf,CATF;;EAWE,MAAIlC,IAAAA,KAAK,GAAG,IAAZ,CAAA;EACAvB,MAAAA,YAAY,CAAC0D,SAAb,GAAyB,CAAzB,CAZF;;EAcE,MAAIA,IAAAA,SAAS,GAAG,CAAhB,CAAA;;EACA,MAAQnC,OAAAA,KAAK,GAAGvB,YAAY,CAACiD,IAAb,CAAkBhC,IAAlB,CAAhB,EAA0C;EACxC;EACA;EACA,QAAA,IAAI0C,KAAK,GAAGpC,KAAK,CAACoC,KAAlB,CAAA;EACA,QAAIA,IAAAA,KAAK,GAAGD,SAAZ,EACED,MAAM,CAAC1C,IAAP,CAAYmC,IAAI,CAACC,SAAL,CAAelC,IAAI,CAAC3D,KAAL,CAAWoG,SAAX,EAAsBC,KAAtB,CAAf,CAAZ,CAAA,CAAA;EACFF,QAAAA,MAAM,CAAC1C,IAAP,CAAkBQ,KAAAA,CAAAA,MAAAA,CAAAA,KAAK,CAAC,CAAD,CAAL,CAASyB,IAAT,EAAlB,EAAA,GAAA,CAAA,CAAA,CAAA;EACAU,QAAAA,SAAS,GAAGC,KAAK,GAAGpC,KAAK,CAAC,CAAD,CAAL,CAASF,MAA7B,CAAA;EACD,OAvBH;;;EAyBE,MAAA,IAAIqC,SAAS,GAAGzC,IAAI,CAACI,MAArB,EAA6B;EAC3BoC,QAAAA,MAAM,CAAC1C,IAAP,CAAYmC,IAAI,CAACC,SAAL,CAAelC,IAAI,CAAC3D,KAAL,CAAWoG,SAAX,CAAf,CAAZ,CAAA,CAAA;EACD,OAAA;;EACDnG,MAAAA,OAAO,CAACC,GAAR,CAAYiG,MAAZ,CAAA,CAAA;EACA,MAAA,OAAA,KAAA,CAAA,MAAA,CAAaA,MAAM,CAACF,IAAP,CAAY,GAAZ,CAAb,EAAA,GAAA,CAAA,CAAA;;EACF,IAAA;EACE,MAAA,OAAO,EAAP,CAAA;EApCJ,GAAA;EAsCD;;ECjID;EACA;EACA;EACA;EACA;EACA;EACA;;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAASK,KAAT,CAAe9E,EAAf,EAAmByB,GAAnB,EAAwBlC,GAAxB,EAA6BwF,KAA7B,EAAoCnD,QAApC,EAA8CO,IAA9C,EAAoD;EAClD,EAAO,OAAA;EACLnC,IAAAA,EAAE,EAAFA,EADK;EAELyB,IAAAA,GAAG,EAAHA,GAFK;EAGLlC,IAAAA,GAAG,EAAHA,GAHK;EAILwF,IAAAA,KAAK,EAALA,KAJK;EAKLnD,IAAAA,QAAQ,EAARA,QALK;EAMLO,IAAAA,IAAI,EAAJA,IAAAA;EANK,GAAP,CAAA;EAQD;;;EAED,SAAS6C,kBAAT,CAA4BhF,EAA5B,EAAgCyB,GAAhC,EAA6D;EAAA,EAAxB1C,IAAAA,IAAwB,uEAAjB,EAAiB,CAAA;EAC3D,EAAMQ,IAAAA,GAAG,GAAGR,IAAH,KAAGA,IAAAA,IAAAA,IAAH,uBAAGA,IAAI,CAAEQ,GAAlB,CAD2D;;EAE3DA,EAAAA,GAAG,IAAI,OAAOR,IAAI,CAACQ,GAAnB,CAAA;;EAF2D,EAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAVqC,QAAU,GAAA,IAAA,KAAA,CAAA,IAAA,GAAA,CAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;EAAVA,IAAAA,QAAU,CAAA,IAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAAA,GAAA;;EAG3D,EAAOkD,OAAAA,KAAK,CAAC9E,EAAD,EAAKyB,GAAL,EAAUlC,GAAV,EAAeR,IAAf,EAAqB6C,QAArB,CAAZ,CAAA;EACD;;;EAED,SAASqD,eAAT,CAAyBjF,EAAzB,EAA6BmC,IAA7B,EAAmC;EACjC,EAAA,OAAO2C,KAAK,CAAC9E,EAAD,EAAKkF,SAAL,EAAgBA,SAAhB,EAA2BA,SAA3B,EAAsCA,SAAtC,EAAiD/C,IAAjD,CAAZ,CAAA;EACD;;ECpCD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACO,SAASgD,cAAT,CAAwBnF,EAAxB,EAA4BoF,SAA5B,EAAuC;EAC5C;EACArH,EAAAA,MAAM,CAACiB,cAAP,CAAsBgB,EAAtB,EAA0B,KAA1B,EAAiC;EAC/Bf,IAAAA,KAAK,EAAEmG,SADwB;EAE/B5E,IAAAA,QAAQ,EAAE,IAAA;EAFqB,GAAjC,EAF4C;;EAO5C,EAAA,IAAM6E,MAAM,GAAGrF,EAAE,CAACsF,OAAH,EAAf,CAP4C;;;EAS5CtF,EAAAA,EAAE,CAACuF,OAAH,CAAWF,MAAX,EAT4C;;EAW7C,CAAA;EACD;EACA;EACA;EACA;;EACO,SAASG,aAAT,CAAuBC,GAAvB,EAA4B;EACjC1H,EAAAA,MAAM,CAAC2H,gBAAP,CAAwBD,GAAG,CAAC5H,SAA5B,EAAuC;EACrCyH,IAAAA,OAAO,EAAE;EACP;EACArG,MAAAA,KAAK,EAAE,SAASqG,OAAT,GAAmB;EACxB,QAAA,IAAMtF,EAAE,GAAG,IAAX,CADwB;;EAGxB,QAAOA,OAAAA,EAAE,CAACK,QAAH,CAAYoD,MAAZ,CAAmB5E,IAAnB,CAAwBmB,EAAxB,CAAP,CAAA;EACD,OAAA;EANM,KAD4B;EASrCuF,IAAAA,OAAO,EAAE;EACP;EACN;EACA;EACA;EACMtG,MAAAA,KAAK,EAAE,SAASsG,OAAT,CAAiBT,KAAjB,EAAwB;EAC7B,QAAA,IAAM9E,EAAE,GAAG,IAAX,CAD6B;;EAG7B,QAAA,IAAM2F,EAAE,GAAG3F,EAAE,CAAC4F,GAAd,CAAA;EACAnH,QAAAA,OAAO,CAACC,GAAR,CAAYiH,EAAZ,EAJ6B;;EAM7B3F,QAAAA,EAAE,CAAC4F,GAAH,GAASC,KAAK,CAACF,EAAD,EAAKb,KAAL,CAAd,CAAA;EACArG,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCoG,KAAzC,CAAA,CAAA;EACD,OAAA;EAbM,KAT4B;EAwBrC;EACAgB,IAAAA,EAAE,EAAE;EACF7G,MAAAA,KAAK,EAAE,SAAS6G,EAAT,GAAc;EACnB;EACA,QAAA,OAAOd,kBAAkB,CAAlB,KAAA,CAAA,KAAA,CAAA,EAAA,CAAmB,IAAnB,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAA4Be,SAA5B,CAAP,CAAA,CAAA,CAAA;EACD,OAAA;EAJC,KAzBiC;EA+BrC;EACAC,IAAAA,EAAE,EAAE;EACF/G,MAAAA,KAAK,EAAE,SAAS+G,EAAT,GAAc;EACnB,QAAA,OAAOf,eAAe,CAAf,KAAA,CAAA,KAAA,CAAA,EAAA,CAAgB,IAAhB,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,IAAA,CAAyBc,SAAzB,CAAP,CAAA,CAAA,CAAA;EACD,OAAA;EAHC,KAhCiC;EAqCrC;EACAE,IAAAA,EAAE,EAAE;EACFhH,MAAAA,KAAK,EAAE,SAASgH,EAAT,CAAYhH,KAAZ,EAAmB;EACxB;EACA,QAAA,OAAO,OAAOA,CAAAA,KAAP,CAAiB,KAAA,QAAjB,GAA4BmF,IAAI,CAACC,SAAL,CAAepF,KAAf,CAA5B,GAAoDA,KAA3D,CAAA;EACD,OAAA;EAJC,KAAA;EAtCiC,GAAvC,CAAA,CAAA;EA6CD,CAAA;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA;EACA;EACA;EACA;EACA;;EACA,SAAS4G,KAAT,CAAeK,QAAf,EAAyBpB,KAAzB,EAAgC;EAC9B,EAAA,IAAMqB,aAAa,GAAGD,QAAQ,CAACE,QAA/B,CAD8B;;EAG9B,EAAA,IAAID,aAAJ,EAAmB;EACjB,IAAA,IAAME,GAAG,GAAGH,QAAZ,CADiB;;EAGjB,IAAA,IAAMI,SAAS,GAAGD,GAAG,CAACE,UAAtB,CAHiB;;EAKjB,IAAA,IAAMC,MAAM,GAAGC,SAAS,CAAC3B,KAAD,CAAxB,CALiB;;EAOjB4B,IAAAA,YAAY,CAACJ,SAAD,EAAYE,MAAZ,EAAoBH,GAAG,CAACM,WAAxB,CAAZ,CAAA;EACAC,IAAAA,WAAW,CAACN,SAAD,EAAYD,GAAZ,CAAX,CARiB;;EAUjB,IAAA,OAAOG,MAAP,CAAA;EACD,GAAA;EACF,CAAA;;EAED,SAASC,SAAT,CAAmB3B,KAAnB,EAA0B;EACxB,EAAA,IAAQrD,GAAR,GAAuCqD,KAAvC,CAAQrD,GAAR;EAAA,MAAasD,KAAb,GAAuCD,KAAvC,CAAaC,KAAb;EAAA,MAAoBnD,QAApB,GAAuCkD,KAAvC,CAAoBlD,QAApB;EAAA,MAA8BO,IAA9B,GAAuC2C,KAAvC,CAA8B3C,IAA9B,CAAA;;EACA,EAAA,IAAI,OAAOV,GAAP,KAAe,QAAnB,EAA6B;EAC3B;EACA;EACAqD,IAAAA,KAAK,CAACa,EAAN,GAAWkB,aAAa,CAACpF,GAAD,CAAxB,CAH2B;;EAK3BqF,IAAAA,UAAU,CAAChC,KAAK,CAACa,EAAP,EAAWZ,KAAX,CAAV,CAAA;EACAnD,IAAAA,QAAQ,CAAC1D,OAAT,CAAiB,UAACqG,KAAD,EAAW;EAC1BwC,MAAAA,WAAW,CAACjC,KAAK,CAACa,EAAP,EAAWc,SAAS,CAAClC,KAAD,CAApB,CAAX,CAAA;EACD,KAFD,CAAA,CAAA;EAGD,GATD,MASO,IAAI,OAAA,CAAO9C,GAAP,CAAe,KAAA,QAAnB,EAA6B,CAA7B,MAEA;EACL;EACAqD,IAAAA,KAAK,CAACa,EAAN,GAAWqB,cAAc,CAAC7E,IAAD,CAAzB,CAAA;EACD,GAAA;;EACD,EAAO2C,OAAAA,KAAK,CAACa,EAAb,CAAA;EACD,CAAA;EACD;EACA;EACA;EACA;EACA;;;EACA,SAASmB,UAAT,CAAoBnB,EAApB,EAAwBZ,KAAxB,EAA+B;EAC7B,EAAA,KAAK,IAAMxF,GAAX,IAAkBwF,KAAlB,EAAyB;EACvB,IAAIxF,IAAAA,GAAG,KAAK,OAAZ,EAAqB;EACnBxB,MAAAA,MAAM,CAACuB,IAAP,CAAYyF,KAAK,CAACxF,GAAD,CAAjB,CAAwBrB,CAAAA,OAAxB,CAAgC,UAAC+I,CAAD,EAAA;EAAA,QAAA,OAAQtB,EAAE,CAAC3B,KAAH,CAASiD,CAAT,CAAA,GAAclC,KAAK,CAAC,OAAD,CAAL,CAAekC,CAAf,CAAtB,CAAA;EAAA,OAAhC,CAAA,CAAA;EACD,KAFD,MAEO;EACLC,MAAAA,YAAY,CAACvB,EAAD,EAAKpG,GAAL,EAAUwF,KAAK,CAACxF,GAAD,CAAf,CAAZ,CAAA;EACD,KAAA;EACF,GAAA;EACF,CAAA;;EAED,SAASsH,aAAT,CAAuBpF,GAAvB,EAA8C;EAAA,EAAlBE,IAAAA,IAAkB,uEAAX,SAAW,CAAA;;EAC5C,EAAQA,QAAAA,IAAI,CAACwF,WAAL,EAAR;EACE,IAAA,KAAK,SAAL;EACE,MAAA,OAAOC,QAAQ,CAACP,aAAT,CAAuBpF,GAAvB,CAAP,CAAA;EAFJ,GAAA;EAID,CAAA;;EAED,SAASuF,cAAT,CAAwBvF,GAAxB,EAA+C;EAAA,EAAlBE,IAAAA,IAAkB,uEAAX,SAAW,CAAA;;EAC7C,EAAQA,QAAAA,IAAI,CAACwF,WAAL,EAAR;EACE,IAAA,KAAK,SAAL;EACE,MAAA,OAAOC,QAAQ,CAACJ,cAAT,CAAwBvF,GAAxB,CAAP,CAAA;EAFJ,GAAA;EAID,CAAA;;EAED,SAASsF,WAAT,CAAqBlF,MAArB,EAA6B0C,KAA7B,EAAsD;EAAA,EAAlB5C,IAAAA,IAAkB,uEAAX,SAAW,CAAA;;EACpD,EAAQA,QAAAA,IAAI,CAACwF,WAAL,EAAR;EACE,IAAA,KAAK,SAAL;EACEtF,MAAAA,MAAM,CAACkF,WAAP,CAAmBxC,KAAnB,CAAA,CAAA;EACA,MAAA,MAAA;EAHJ,GAAA;EAKD,CAAA;;EAED,SAAS2C,YAAT,CAAsBvB,EAAtB,EAA0BpG,GAA1B,EAA+BN,KAA/B,EAAwD;EAAA,EAAlB0C,IAAAA,IAAkB,uEAAX,SAAW,CAAA;;EACtD,EAAQA,QAAAA,IAAI,CAACwF,WAAL,EAAR;EACE,IAAA,KAAK,SAAL;EACExB,MAAAA,EAAE,CAACuB,YAAH,CAAgB3H,GAAhB,EAAqBN,KAArB,CAAA,CAAA;EACA,MAAA,MAAA;EAHJ,GAAA;EAKD,CAAA;;EAED,SAAS2H,WAAT,CAAqB/E,MAArB,EAA6B0C,KAA7B,EAAsD;EAAA,EAAlB5C,IAAAA,IAAkB,uEAAX,SAAW,CAAA;;EACpD,EAAQA,QAAAA,IAAI,CAACwF,WAAL,EAAR;EACE,IAAA,KAAK,SAAL;EACEtF,MAAAA,MAAM,CAAC+E,WAAP,CAAmBrC,KAAnB,CAAA,CAAA;EACA,MAAA,MAAA;EAHJ,GAAA;EAKD,CAAA;;EAED,SAASmC,YAAT,CAAsB7E,MAAtB,EAA8B0C,KAA9B,EAAqC8C,SAArC,EAAkE;EAAA,EAAlB1F,IAAAA,IAAkB,uEAAX,SAAW,CAAA;;EAChE,EAAQA,QAAAA,IAAI,CAACwF,WAAL,EAAR;EACE,IAAA,KAAK,SAAL;EACE;EACAtF,MAAAA,MAAM,CAAC6E,YAAP,CAAoBnC,KAApB,EAA2B8C,SAA3B,CAAA,CAAA;EACA,MAAA,MAAA;EAJJ,GAAA;EAMD;;ECxLD;EACA;EACA;EACA;EACA;EACA;EAIO,SAASC,SAAT,CAAmB7B,GAAnB,EAAwB;EAC7B;EACF;EACA;EACA;EACEA,EAAAA,GAAG,CAAC5H,SAAJ,CAAc0J,KAAd,GAAsB,SAASA,KAAT,CAAeC,OAAf,EAAwB;EAC5C;EACA;EACA,IAAMxH,IAAAA,EAAE,GAAG,IAAX,CAAA;EACAA,IAAAA,EAAE,CAACK,QAAH,GAAcmH,OAAd,CAJ4C;EAK5C;;EACArH,IAAAA,SAAS,CAACH,EAAD,CAAT,CAN4C;EAQ5C;;EACA,IAAIwH,IAAAA,OAAO,CAAC7B,EAAZ,EAAgB3F,EAAE,CAACyH,MAAH,CAAUD,OAAO,CAAC7B,EAAlB,CAAA,CAAA;EACjB,GAVD,CAAA;;EAWAF,EAAAA,GAAG,CAAC5H,SAAJ,CAAc4J,MAAd,GAAuB,SAASA,MAAT,CAAgB9B,EAAhB,EAAoB;EACzC,IAAM3F,IAAAA,EAAE,GAAG,IAAX,CAAA;EACA,IAAA,IAAM0H,GAAG,GAAG1H,EAAE,CAACK,QAAf,CAAA;EACAsF,IAAAA,EAAE,GAAGyB,QAAQ,CAACO,aAAT,CAAuBhC,EAAvB,CAAL,CAAA;EACA,IAAItC,IAAAA,QAAJ,CAJyC;EAMzC;;EACA,IAAA,IAAI,CAACqE,GAAG,CAACjE,MAAT,EAAiB;EACf;EACA,MAAI,IAAA,CAACiE,GAAG,CAACrE,QAAL,IAAiBsC,EAArB,EAAyBtC,QAAQ,GAAGsC,EAAE,CAACiC,SAAd,CAAzB,KACK,IAAIjC,EAAJ,EAAQtC,QAAQ,GAAGqE,GAAG,CAACrE,QAAf,CAAA;EACd,KAXwC;;;EAazC,IAAA,IAAIA,QAAJ,EAAc;EACZ;EACA;EACAA,MAAAA,QAAQ,GAAGA,QAAQ,CAACjB,OAAT,CAAiB,aAAjB,EAAgC,EAAhC,CAAX,CAHY;;EAKZ,MAAA,IAAMqB,MAAM,GAAGL,iBAAiB,CAACC,QAAD,CAAhC,CAAA;EACAqE,MAAAA,GAAG,CAACjE,MAAJ,GAAaA,MAAb,CAAA;EACD,KApBwC;EAsBzC;;;EACAhF,IAAAA,OAAO,CAACC,GAAR,CAAYgJ,GAAG,CAACjE,MAAhB,EAvByC;;EAyBzC0B,IAAAA,cAAc,CAACnF,EAAD,EAAK2F,EAAL,CAAd,CAAA;EACA;EACJ;EACA;EACA;EACA;EACG,GA/BD,CAAA;EAgCD;;ECzDD;EACA;EACA;EACA;EACA;EACA;EAKA;EACA;EACA;EACA;;EACA,SAASF,GAAT,CAAa+B,OAAb,EAAsB;EACpB;EACA,EAAKD,IAAAA,CAAAA,KAAL,CAAWC,OAAX,CAAA,CAAA;EACD,CAAA;;EACDF,SAAS,CAAC7B,GAAD,CAAT;;EACAD,aAAa,CAACC,GAAD,CAAb;;;;;;;;"}